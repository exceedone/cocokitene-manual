openapi: 3.0.0
info:
  title: Exment API
  version: '1.0'
  description: |-
    ExmentのWeb APIリファレンスです。  
    アプリの登録方法や、アクセストークンの取得方法、スコープ一覧は[こちら](https://exment.net/docs/#/ja/api)をご参照ください。  
    その他マニュアルは、[こちら](https://exment.net/docs/#/ja/)をご参照ください。

    こちらはExmentのRestAPIの仕様書になります。OpenAPI形式で作成されています。
  termsOfService: 'https://exment.net'
  contact:
    email: info@exment.net
servers:
  - url: 'http://localhost/admin'
paths:
  /api/version:
    get:
      summary: システムバージョン情報取得
      tags:
        - システム
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Exmentバージョン
                required:
                  - version
              examples:
                Example:
                  value:
                    version: v3.0.1
      description: |
        #### 処理概要
        * インストールしているExmentのシステムバージョンを取得

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        なし

        #### 対応バージョン
        v1.1.0
      security:
        - OAuth2認証: []
      operationId: get-version
  /api/me:
    get:
      summary: ログインユーザー情報取得
      tags:
        - システム
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValue'
              examples:
                Example:
                  value:
                    id: 1
                    suuid: b6ba6222ebb2aa455521
                    parent_type: null
                    parent_id: null
                    value:
                      email: admin@foobar.test
                      user_code: admin
                      user_name: admin
                    created_at: '2019-11-13 17:00:38'
                    updated_at: '2019-11-13 17:06:11'
                    deleted_at: null
                    deleted_user_id: null
                    created_user_id: null
                    updated_user_id: '1'
                    label: admin
      description: |-
        #### 処理概要
        * ログインユーザー自身のユーザー情報を取得する

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + me

        #### 対応バージョン
        v1.1.0
      security:
        - OAuth2認証: []
      operationId: get-me
  /api/avatar:
    get:
      summary: ログインユーザーのアバター取得
      tags:
        - システム
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: object
                properties: {}
              examples: {}
            application/json:
              schema:
                type: object
                properties:
                  base64:
                    type: string
                    description: アバターのbase64形式文字列
              examples:
                example:
                  value:
                    base64: iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAC0ZJREFUeJztnV1sFNcVx3+7C7ZjO1/ExUUlDoQEG3BIQ2jqAgpUJBTXJKUJcsIDqS2VvOQpaR6SGEWtVKpaaWiTCF4iVVXUN6RIDdSJoCDqEOo4iWmEPzAsJk0rcMCWbWxjWK99+zC7xDb7MbM7c8/Men7SX5Z213vPPefs3Dt37keA3CMILAaWx/4uAsqA7wAlwDygEMiLCSAS01WgP6bLwNfA+Zg6ga+ASS210ERA2gAbuBtYA6wFfgA8ABQ5VNYI0A60Ap8AJ4D/OVSWTxIKgGrgbeAsoIR1BngL2ByzzccB8oAngb8CV5APejINAe8BW/i2efHJgqXAG8Al5INrVd8AjcD9tnslxwkAjwMfIR9Eu/QhsJHc6HM5RhB4GvgS+YA5pZPAVvxEmEYAqMFwjnSAdOlzjE7jrGcFcAj5gEjpQ2BZ1l70IEXAHiCKfBCkNY7R0S3MyqMeYhPGyJq0492mcxgdxZylENiHvKPdrrfIwQGlB4Eu5J3rFZ0CKjPytAvZAYwh71SvaRR4NgN/u4Y5GOP10o70ut4EQhZ9L86tQBPyzssVfYBzTzhtZwGza1BHl74ASi3EQYQy3PGINlfVDSw0HQ3NLAH+g7yTcl3ngXtNxkQbZfjB150ErrkSLMC/7EuoGxf0CW7F7/BJ6nME7w7m4N/quUEfIDRO4A/yuEdvpomV7eywyXAtmjNnjtqyZYvau3evam1tVf39/Soajao40WhUDQwMqLa2NvXuu++qp556SuXn54vbbVHaho0fxCNj+/n5+erFF19UFy5cUFbp6+tTu3btUkVFReL1MKlRNDxAKsQjT/VWrVqlOjs7LQd+Jj09PWrdunXi9TGpUzj8KHmvCyqZVtu2bVNjY2NZBz9OJBJR9fX14vUyqT9ZjKlpNrmgcmm1detWNT4+blvw40xOTqodO3aI18+kbJ9ZVIwHpnFVVlaq0dFR24Mf59q1a2r16tXi9TShMHCLxRinZI8LKpVSoVBItbW1ORb8OJ2dnSovL0+8vibUaDnKSViBB2bv7ty50/Hgx3nhhRfE62tC40C5xVjfRAAPzNsPBAIqHA5rS4Bz586pQCAgXm8TOmg14DOpcUEl0mrDhg3agh/n0UcfFa+3SW1KFeBgmvd+m+qf3cITTzyhvczq6mrtZWbIblKsRUyVAD8Hvm+7OQ5QVVWlvcyHH35Ye5kZshqw/AsJ4KFVupcvX9beBITDYfF6W9AXJLkKJLsCPAasTPKeqwgGg9x1113ay73jjju0l5kFq4D1id5IlgC/cs4W+wkE9C+3j0aj2svMkpcTvZgoAZYCP3HWFvuYnJwkEoloL3dkZER7mVlSA9w388VECbDTeVvsZXBwUHuZAwMD2su0gV/OfGFmAuQBv9Bji31IBMOjCVAHzJ36wswE2Iyxo6an8BPANKUYG3DdYGYC1OqzxT78JsAS02I8NQEKgJ/ptcUeJIIxNDSkvUyb2ArkJ3qjGvkBC0tat26d6u3tnTbBUye9vb2qqqpK3A8ZaFozEMdz07xbWlpEAj+V5uZmcT9koD3xoE8dQTlLgvtENxOJRJg7d276DzrI8PAwt912m6gNGXCa2PZ08T7A3Xgs+AATExPSJjA56cnjAyow1nTeSIA1crZkTkdHh7QJdHZ2SpuQKWvh2wRYK2hIxjQ1NUmbwIEDB6RNyJRpMf8X8h0Ty1qwYIEaGRkR6wAODg6qkpIScT9kqE/iwQ9iHIUibVBGqq+vFwn+5OSk2r59u3j9s9AQsZuAJS4wJivV1dWpSCSiNQFqa2vF622D7gFjupC0IVlL56zgK1euiNfXJlXHj1jzPDqHgyWePTjE4iDGuXqex0+AjFgcxNjhy/P09fVpK+vChQvaynKYe4J48Pl/IsLhsLayurq6tJXlMCVBjONUPU9ra6u2so4fP66tLIcpCQAXge9KW5ItRUVFXLp0icJCZ09eGRsbo7S0lOHhYUfL0cTFIDlyVs3o6Cj79+93vJz9+/fnSvAhtoeAJzZ8MqMVK1aoiYkJx+7/o9GoWrZsmXg9bdRVgAkXGGKb9u3b51gCvPPOO+L1s1kTOZcAxcXFqru72/bgd3V1eWnLOEsJkDNNQFzl5eW2J8DSpUvF6+WArgYwngp5bk5TOpRStn6fxPpDDQwGiXUEfGYlY0GgX9oKHzH6/ASY3fQFgcvSVviI0RcEvpa2wm5CIfvPTwgGU22n5Fm+CmJsAZtTVFRU2P6d5eVZ77noRnIzAV5+OeFuKFnx0ksv2f6dLuA8GGfQSQ9I2KKCggLV2Nho+yBQnN27d3vxJJFUKgtgTAsfwtgR3FMUFxezZs0aqqqqeOihh1i/fj133nmno2X29/fT3NzMyZMnaWlp4cSJE4yOjjpapkMMATec5ZmFIcuXL1evvfaaOn78uCPnAlhlfHxcNTc3q1deeUVVVFSI+8eCps1qecsFBiVVWVmZamhoUB0dHdLxTkt7e7t69dVX1cKFC8X9lkY3loiDsW2ItEHTFAgEVE1NjWpqanL0Gb9TTExMqIMHD6rq6mq37iz+9NQEWOgCgxQYR7zV1dXZcuCTW2hvb1fPPfecCoVC4v6dopumAZ6RNuqZZ55RZ86ckY6XY5w+fVpt27ZNOvAKSLimXawfsHLlSvXxxx9Lx0cbx44dU5WVlZIJkPCk0c26DQmFQur111/XvrDTDVy/fl01NDSoYDAokQCPJUqAAox7Qy1GzJ8/Xx09elQ6DuIcPnxY9x4DAxg7wibkPR1GLFq0SJ09e1ba966hu7tblZWV6UqAPycLPsAWpw2YP3++6unpkfa56wiHw7quBJtTJUAe8I2TBhw5ckTa167l0KFDTgf/IjM2i05Eo1MG1NbWSvvY9Th8m/i7dMEHuN8pA/xff3oOHz7sZAIsmRnsZHOdPyRNW5EJg4OD3H777XZ/bU4xMDDAvHnznPjqgyQ4PSxZAmwE/mG3Bcrmufq5ikNrEDYA/7yprGQ2AG3YfG6gnwDmcCABPgcewWgGppFspqMCfmO3FT5i/JoEwYcUR4rG3vsMsO2ITP8KYA6brwCfAj8iSQKkmuusgF12WuIjQgNJgg+pEwDgo5h8vMkHwJFUHzBzrVkGnAKyXm3hNwHmsKkJGAdWYBwEkhQzy126gD/aYZGPVt4gTfDB3BUAjI2kTmGsIcgY/wpgDhuuAGcxDv++lu6DZhe8XQWez8YiH608j4ngg/kEAKMz8XZG5vjoZA9wzOyHrV5rCjDGBiot/h/gNwFmyaIJ+BL4IXDd7D9YXfN8DdiOv62MGxnBiI3p4IP1BABoJ8Ex5D7i1GPcsWljD87OXvFlXo1pYuUIIYyRJunKz3a9jw2DdJlSDHyRxkBfzulTXLDZdynQjbwzZps6cdFhHwsxthuRdspsUQ/wPVOR0ci9+EmgK/iLzIVEP3fjNwdOqgsX/vJnUooxB03aWbmmT3FRm5+OYvxbRDv1Pi7o7VslhLEOXdp5Xlcjgvf5dvAsMIq8I72mYWbs4+NlKjEmlEg71Sv6N2D/frfC3ILLt6Nzif4A5GfoY0+wETiHvKPdpjMYy7dmBYUYnZtx5B0vrQiwm9ghjrONcuDvyAdBSn/DWI4/69mEMdVMOiC61ILRFPpMIQA8SW4/Xv4MqMH6XMxZRQD4MbnVNBwA1uMH3jL3Ab8HepEPolVdxNiT56ZtWXysMxf4KfAXYBD54CbTAMY+fJsxsRuXT2bkA49jTErtQj7onRjPPB4jxQ6cbiUX2qQFwNqYHgEeAG51qKwrGEParcAnMfU6VJYWciEBZhIAyoDlwOKY7gFKpugWjCtJfMj1ekxjQN8UfRXTeaAD+C/Grz5n+D+GD2o7ORlvUAAAAABJRU5ErkJggg==
      description: |-
        #### 処理概要
        * ログインユーザー自身のアバター画像を取得する
        * アバターがない場合、クエリ文字列"default"が1であれば、デフォルト画像を返却する。それ以外は、nullを返却する
        * 戻り値は、クエリ文字列"base64"が1であれば、base64形式のjson。それ以外は、画像のバイナリファイル

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + me

        #### 対応バージョン
        v4.2.7
      security:
        - OAuth2認証: []
      operationId: get-avatar
      parameters:
        - schema:
            type: integer
          in: query
          name: default
          description: 1の場合で、ユーザーのアバターがない場合、デフォルト画像を返却する
        - schema:
            type: string
          in: query
          name: base64
          description: 1の場合、レスポンスをbase64形式に変換したjsonで返却。それ以外はバイナリファイルで返却
  /api/table:
    get:
      summary: カスタムテーブル一覧
      tags:
        - テーブル
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CustomTable'
                  - properties:
                      data:
                        $ref: ''
                type: object
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 3
                        suuid: 4131b102c1c3f3879114
                        table_name: base_info
                        table_view_name: 基本情報
                        description: null
                        system_flg: '1'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-building
                          comment_flg: '0'
                          attachment_flg: '0'
                          one_record_flg: '1'
                          search_enabled: '0'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:00:11'
                        created_user_id: null
                        updated_user_id: null
                      - id: 4
                        suuid: 54e448bbd64731a061aa
                        table_name: user
                        table_view_name: ユーザー
                        description: null
                        system_flg: '1'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-user
                          comment_flg: '0'
                          attachment_flg: '0'
                          one_record_flg: '0'
                          search_enabled: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:00:11'
                        created_user_id: null
                        updated_user_id: null
                      - id: 5
                        suuid: e338ce723f7da614d377
                        table_name: organization
                        table_view_name: 組織
                        description: null
                        system_flg: '1'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-sitemap
                          comment_flg: '0'
                          attachment_flg: '0'
                          one_record_flg: '0'
                          search_enabled: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:00:11'
                        created_user_id: null
                        updated_user_id: null
                    first_page_url: 'http://localhost/admin/api/table?page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/table?page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/table'
                    per_page: 20
                    prev_page_url: null
                    to: 11
                    total: 11
      description: |-
        #### 処理概要
        * カスタムテーブル一覧を取得する
        * ログインユーザーがアクセスできるテーブルのみ、一覧として取得できる


        #### Exment権限(Permission)
        + システム_システム情報
        + システム_カスタムテーブル
        + システム_すべてのデータ
        + テーブル_テーブル
        + テーブル_すべてのデータの編集
        + テーブル_すべてのデータの閲覧
        + テーブル_すべてのデータの参照
        + テーブル_担当者データの編集
        + テーブル_担当者データの閲覧
        + テーブル_担当者データの閲覧


        #### APIスコープ(scope)
        + table_read
        + table_write


        #### 対応バージョン
        + v1.1.0 新規追加
        + v3.0.8 パラメータ「id」「expands」追加
      parameters:
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: string
          in: query
          name: id
          description: 取得したいテーブルの、ID絞り込みを行う場合設定。カンマ区切り
        - schema:
            type: string
          in: query
          name: expands
          description: テーブルに紐づく、カスタム列一覧を取得可能。"columns"を指定可能
      requestBody: {}
      operationId: get-tables
      security:
        - OAuth2認証: []
  '/api/table/{tableKey}':
    parameters:
      - schema:
          type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
    get:
      summary: カスタムテーブル情報取得
      tags:
        - テーブル
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTable'
              examples:
                Example:
                  value:
                    id: 8
                    suuid: 5c86fb70562dd56f34c0
                    table_name: information
                    table_view_name: お知らせ
                    description: ユーザーに通知するお知らせです。ダッシュボードなどに表示することができます。
                    system_flg: '0'
                    showlist_flg: '1'
                    order: '0'
                    options:
                      icon: fa-exclamation
                      comment_flg: '0'
                      revision_flg: '0'
                      attachment_flg: '1'
                      one_record_flg: '0'
                      search_enabled: '1'
                      use_label_id_flg: '0'
                      all_user_editable_flg: '0'
                      all_user_viewable_flg: '1'
                      all_user_accessable_flg: '1'
                    created_at: '2019-11-13 17:00:11'
                    updated_at: '2019-11-13 17:08:31'
                    created_user_id: null
                    updated_user_id: '1'
          headers: {}
      description: |
        #### 処理概要
        * カスタムテーブルのIDもしくはテーブル名を指定し、そのカスタムテーブル内のカスタム列情報一覧を取得する
        * ログインユーザーがアクセスできないテーブルの場合、403エラーが発生する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + table_read
        + table_write

        #### 対応バージョン
        v1.1.0
      parameters: []
      security:
        - OAuth2認証: []
      operationId: get-table
  '/api/table/{tableKey}/columns':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
    get:
      summary: カスタムテーブル内のカスタム列一覧取得
      tags:
        - テーブル
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomColumn'
              examples:
                Example:
                  value:
                    - id: 45
                      suuid: 9ce2740b044ea7143a55
                      custom_table_id: '8'
                      column_name: title
                      column_view_name: タイトル
                      column_type: text
                      description: null
                      system_flg: '0'
                      order: '0'
                      options:
                        required: '1'
                        index_enabled: '1'
                      created_at: '2019-11-13 17:00:11'
                      updated_at: '2019-11-13 17:00:15'
                      created_user_id: null
                      updated_user_id: null
                      required: '1'
                      index_enabled: '1'
                      unique: false
                      custom_table:
                        id: 8
                        suuid: 5c86fb70562dd56f34c0
                        table_name: information
                        table_view_name: お知らせ
                        description: ユーザーに通知するお知らせです。ダッシュボードなどに表示することができます。
                        system_flg: '0'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-exclamation
                          comment_flg: '0'
                          revision_flg: '0'
                          attachment_flg: '1'
                          one_record_flg: '0'
                          search_enabled: '1'
                          use_label_id_flg: '0'
                          all_user_editable_flg: '0'
                          all_user_viewable_flg: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:08:31'
                        created_user_id: null
                        updated_user_id: '1'
                    - id: 46
                      suuid: c5ade37d68066e8eb7c4
                      custom_table_id: '8'
                      column_name: body
                      column_view_name: 本文
                      column_type: editor
                      description: null
                      system_flg: '0'
                      order: '0'
                      options:
                        string_length: '2000'
                      created_at: '2019-11-13 17:00:11'
                      updated_at: '2019-11-13 17:00:11'
                      created_user_id: null
                      updated_user_id: null
                      required: false
                      index_enabled: false
                      unique: false
                      custom_table:
                        id: 8
                        suuid: 5c86fb70562dd56f34c0
                        table_name: information
                        table_view_name: お知らせ
                        description: ユーザーに通知するお知らせです。ダッシュボードなどに表示することができます。
                        system_flg: '0'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-exclamation
                          comment_flg: '0'
                          revision_flg: '0'
                          attachment_flg: '1'
                          one_record_flg: '0'
                          search_enabled: '1'
                          use_label_id_flg: '0'
                          all_user_editable_flg: '0'
                          all_user_viewable_flg: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:08:31'
                        created_user_id: null
                        updated_user_id: '1'
      description: |
        #### 処理概要
        * カスタムテーブルのIDもしくはテーブル名を指定し、そのカスタムテーブル内のカスタム列情報一覧を取得する
        * ログインユーザーがアクセスできないテーブルの場合、403エラーが発生する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + table_read
        + table_write

        #### 対応バージョン
        v1.1.0
      security:
        - OAuth2認証: []
      operationId: get-table-columns
  '/api/column/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: カスタム列ID
        schema:
          type: integer
    get:
      summary: カスタム列情報取得
      tags:
        - テーブル
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomColumn'
              examples:
                Example:
                  value:
                    id: 45
                    suuid: 9ce2740b044ea7143a55
                    custom_table_id: '8'
                    column_name: title
                    column_view_name: タイトル
                    column_type: text
                    description: null
                    system_flg: '0'
                    order: '0'
                    options:
                      required: '1'
                      index_enabled: '1'
                    created_at: '2019-11-13 17:00:11'
                    updated_at: '2019-11-13 17:00:15'
                    created_user_id: null
                    updated_user_id: null
                    required: '1'
                    index_enabled: '1'
                    unique: false
      description: |
        #### 処理概要
        * カスタム列のIDから、カスタム列情報を取得する。
        * ログインユーザーがアクセスできないカスタムテーブルの列だった場合、403エラーが発生する。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + table_read
        + table_write

        #### 対応バージョン
        v1.1.0
      security:
        - OAuth2認証: []
      operationId: get-column
  '/api/view/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはsuuid(20桁の文字列)
    get:
      summary: カスタムビュー情報取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CustomView'
              examples:
                example-1:
                  value:
                    id: 10
                    suuid: 3d62f5b9ea3241e6a417
                    custom_table_id: '8'
                    view_type: '0'
                    view_kind_type: '9'
                    view_view_name: View Sample
                    created_at: '2020-06-16 00:24:20'
                    updated_at: '2020-06-16 00:24:20'
                    created_user_id: '10'
                    updated_user_id: '10'
      operationId: get-view
      description: |
        #### 処理概要
        * ビューidもしくはsuuidから、ビュー情報を取得する
        * ログインユーザーがアクセスできないカスタムテーブルのビューだった場合、403エラーが発生する。
        * 現在、ビュー列やビューフィルタなどの取得はできません。「カスタムデータ一覧取得(ビュー使用)」や「カスタムデータ情報取得(ビュー使用)」で、ビューを指定するために実行してください。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + view_read

        #### 対応バージョン
        v3.3.X
      parameters: []
      tags:
        - ビュー
  '/api/table/{tableKey}/views':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
    get:
      summary: カスタムテーブル内のカスタムビュー一覧取得
      tags:
        - ビュー
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomView'
              examples:
                Example:
                  value:
                    - id: 45
                      suuid: 9ce2740b044ea7143a55
                      custom_table_id: '8'
                      column_name: title
                      column_view_name: タイトル
                      column_type: text
                      description: null
                      system_flg: '0'
                      order: '0'
                      options:
                        required: '1'
                        index_enabled: '1'
                      created_at: '2019-11-13 17:00:11'
                      updated_at: '2019-11-13 17:00:15'
                      created_user_id: null
                      updated_user_id: null
                      required: '1'
                      index_enabled: '1'
                      unique: false
                      custom_table:
                        id: 8
                        suuid: 5c86fb70562dd56f34c0
                        table_name: information
                        table_view_name: お知らせ
                        description: ユーザーに通知するお知らせです。ダッシュボードなどに表示することができます。
                        system_flg: '0'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-exclamation
                          comment_flg: '0'
                          revision_flg: '0'
                          attachment_flg: '1'
                          one_record_flg: '0'
                          search_enabled: '1'
                          use_label_id_flg: '0'
                          all_user_editable_flg: '0'
                          all_user_viewable_flg: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:08:31'
                        created_user_id: null
                        updated_user_id: '1'
                    - id: 46
                      suuid: c5ade37d68066e8eb7c4
                      custom_table_id: '8'
                      column_name: body
                      column_view_name: 本文
                      column_type: editor
                      description: null
                      system_flg: '0'
                      order: '0'
                      options:
                        string_length: '2000'
                      created_at: '2019-11-13 17:00:11'
                      updated_at: '2019-11-13 17:00:11'
                      created_user_id: null
                      updated_user_id: null
                      required: false
                      index_enabled: false
                      unique: false
                      custom_table:
                        id: 8
                        suuid: 5c86fb70562dd56f34c0
                        table_name: information
                        table_view_name: お知らせ
                        description: ユーザーに通知するお知らせです。ダッシュボードなどに表示することができます。
                        system_flg: '0'
                        showlist_flg: '1'
                        order: '0'
                        options:
                          icon: fa-exclamation
                          comment_flg: '0'
                          revision_flg: '0'
                          attachment_flg: '1'
                          one_record_flg: '0'
                          search_enabled: '1'
                          use_label_id_flg: '0'
                          all_user_editable_flg: '0'
                          all_user_viewable_flg: '1'
                          all_user_accessable_flg: '1'
                        created_at: '2019-11-13 17:00:11'
                        updated_at: '2019-11-13 17:08:31'
                        created_user_id: null
                        updated_user_id: '1'
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomView'
              examples:
                Example:
                  value:
                    - id: 5
                      suuid: b6d5afcda4ce26091f36
                      custom_table_id: '8'
                      view_type: '0'
                      view_kind_type: '9'
                      view_view_name: 全件ビュー
                      created_at: '2020-06-16 00:24:12'
                      updated_at: '2020-06-16 00:24:12'
                      created_user_id: null
                      updated_user_id: null
                    - id: 6
                      suuid: 99120fd4b360e15993d2
                      custom_table_id: '8'
                      view_type: '0'
                      view_kind_type: '0'
                      view_view_name: お知らせ一覧
                      created_at: '2020-06-16 00:24:12'
                      updated_at: '2020-06-16 00:24:12'
                      created_user_id: null
                      updated_user_id: null
      description: |
        #### 処理概要
        * カスタムテーブルのIDもしくはテーブル名を指定し、そのカスタムテーブル内のカスタムビュー一覧を取得する
        * ログインユーザーがアクセスできないテーブルの場合、403エラーが発生する
        * 現在、ビュー列やビューフィルタなどの取得はできません。「カスタムデータ一覧取得(ビュー使用)」や「カスタムデータ情報取得(ビュー使用)」で、ビューを指定するために実行してください。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + view_read

        #### 対応バージョン
        v3.3.X
      security:
        - OAuth2認証: []
      operationId: get-view-columns
      parameters:
        - schema:
            type: string
          in: query
          name: view_type
          description: |-
            指定した場合、ビュー権限で絞り込みを行う。
            0=システムビュー、1=ユーザービュー
        - schema:
            type: string
          in: query
          name: view_kind_type
          description: |-
            指定した場合、ビュー種類で絞り込みを行う。
            0=通常ビュー、1=集計ビュー、2=カレンダービュー、3=条件ビュー、9=全件ビュー
        - schema:
            type: string
          in: query
          name: view_view_name
          description: 指定した場合、ビュー表示名で絞り込みを行う
      requestBody: {}
  '/api/data/{tableKey}':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        schema:
          type: string
        description: テーブル名(Ex. information)
    get:
      summary: カスタムデータ一覧取得
      tags:
        - データ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CustomValue'
                  - $ref: '#/components/schemas/Paginate'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 8
                        suuid: 946a85f121a7d9b2ab72
                        parent_type: null
                        parent_id: null
                        value:
                          body: テストです。
                          order: '1'
                          title: テスト
                          priority: 3
                          view_flg: 1
                        created_at: '2019-11-15 16:44:41'
                        updated_at: '2019-11-15 16:44:41'
                        deleted_at: null
                        deleted_user_id: null
                        created_user_id: null
                        updated_user_id: null
                        label: テスト
                      - id: 9
                        suuid: 4c7944646420b5b5c0d3
                        parent_type: null
                        parent_id: null
                        value:
                          body: テストです。
                          order: '1'
                          title: テスト
                          priority: 3
                          view_flg: 1
                        created_at: '2019-11-15 16:48:46'
                        updated_at: '2019-11-15 16:48:46'
                        deleted_at: null
                        deleted_user_id: null
                        created_user_id: '1'
                        updated_user_id: '1'
                        label: テスト
                      - id: 10
                        suuid: 1001025f0f3715dbc80b
                        parent_type: null
                        parent_id: null
                        value:
                          body: テストです。
                          order: '1'
                          title: テスト
                          priority: 3
                          view_flg: 1
                        created_at: '2019-11-15 17:41:54'
                        updated_at: '2019-11-15 17:41:54'
                        deleted_at: null
                        deleted_user_id: null
                        created_user_id: '1'
                        updated_user_id: '1'
                        label: テスト
                    first_page_url: 'http://localhost/admin/api/data/information?count=20&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/data/information?count=20&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/data/information'
                    per_page: 20
                    prev_page_url: null
                    to: 3
                    total: 3
      description: |
        #### 処理概要
        * 特定のカスタムテーブルに登録している、カスタムデータの一覧を取得する
        * ログインユーザーに権限のあるデータのみ、一覧の対象となる
        * 取得されるvalue配列の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v1.1.0 新規作成
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.7 valuetypeパラメータ追加
        - v5.0.1 childrenパラメータ追加


        #### リレーションの子データを取得する場合
        childrenパラメータが1のとき、そのデータの子データも同時に取得する。  
        ※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可  
        "data"配列に"children"が追加され、その中に、該当の子テーブルのデータ一覧が追加される。  
        その時の戻り値の例は、以下のようになる。(一部割愛)　ここでは、子テーブルは"child_table"としている。  

        ```
        {
          "current_page": 1,
          "data": [
            {
              "id": 1,
              "suuid": "a1b2f1fc0e564e3e2ece",
              "parent_type": null,
              "parent_id": null,
              "value": {
                "date": "2022-07-30",
                "text": "test_1",
                "user": "1",
                "email": "foovartest1@test.com.test"
              },
              "created_at": "2022-07-29 09:35:42",
              "updated_at": "2022-07-29 09:35:42",
              "deleted_at": null,
              "deleted_user_id": null,
              "created_user_id": "1",
              "updated_user_id": "1",
              "children": {
                "child_table": [
                  {
                    "id": 1,
                    "suuid": "c7751f097aa5e0a6091c",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-30",
                      "text": "test_1",
                      "user": "1",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "1",
                    "updated_user_id": "1"
                  },
                  {
                    "id": 11,
                    "suuid": "17e2f47ebf89e6b09c0a",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-31",
                      "text": "test_2",
                      "user": "2",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "2",
                    "updated_user_id": "2"
                  }
                ]
              }
            }
          ]
        }
        ```
      parameters:
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            maximum: 100
            minimum: 1
            default: '20'
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: string
          in: query
          name: orderby
          description: データの並べ替えを行う場合、並べ替えの列名。複数ある場合はカンマ区切り。逆順は、「id desc」のように半角スペースを追加する
        - schema:
            type: string
          in: query
          name: id
          description: 取得したいデータの、ID絞り込みを行う場合設定。カンマ区切り
        - schema:
            type: integer
            default: '0'
          in: query
          name: label
          description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
        - schema:
            type: string
          in: query
          name: valuetype
          description: 返却する値の種類。"text"の場合、画面に表示する文言を返却する
        - schema:
            type: integer
          in: query
          name: children
          description: 1のとき、そのデータの子データも同時に取得する。※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可
      security:
        - OAuth2認証: []
      operationId: get-values
    post:
      summary: カスタムデータ新規作成
      tags:
        - データ
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                  - {}
                type: object
              examples:
                Example(1件のみ登録):
                  value:
                    id: 8
                    suuid: 946a85f121a7d9b2ab72
                    parent_type: null
                    parent_id: null
                    value:
                      body: テストです。
                      order: '1'
                      title: テスト
                      priority: 3
                      view_flg: 1
                    created_at: '2019-11-15 16:44:41'
                    updated_at: '2019-11-15 16:44:41'
                    deleted_at: null
                    deleted_user_id: null
                    created_user_id: '1'
                    updated_user_id: '1'
                    label: テスト
                Example(複数件登録):
                  value:
                    - id: 10
                      suuid: 1001025f0f3715dbc80b
                      parent_type: null
                      parent_id: null
                      value:
                        body: テストです。
                        order: '1'
                        title: テスト
                        priority: 3
                        view_flg: 1
                      created_at: '2019-11-15 17:41:54'
                      updated_at: '2019-11-15 17:41:54'
                      deleted_at: null
                      deleted_user_id: null
                      created_user_id: '1'
                      updated_user_id: '1'
                      label: テスト
                    - id: 11
                      suuid: 273dda2cfcd1e0a21708
                      parent_type: null
                      parent_id: null
                      value:
                        body: テストです2。
                        order: '2'
                        title: テスト2
                        priority: 4
                        view_flg: 1
                      created_at: '2019-11-15 17:41:54'
                      updated_at: '2019-11-15 17:41:54'
                      deleted_at: null
                      deleted_user_id: null
                      created_user_id: '1'
                      updated_user_id: '1'
                      label: テスト2
      description: |
        #### 処理概要
        * カスタムテーブルに、データを新規作成する
        * ログインユーザーがカスタムテーブルに新規追加する権限のない場合、403エラーが発生する
        * 登録を行いたいデータは、value配列内に値を代入してPOSTする。送信値の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集

        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        - v1.1.0 対応
        - v3.1.0 複数件登録、ならびに親データを指定しての新規追加に対応。ならびに、画像・ファイル列へのファイル保存に対応
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.7 valuetypeパラメータ追加

        #### ファイル・画像列にファイルを保存する場合

        * 以下のように、value->(ファイル・画像列)に、ファイル名・ファイルのbase64文字列を指定してください。

        ```
        {
           "value": {
                "title": "test",
                "file": {
                    "name" : "hello.txt",
                    "base64" : "aGVsbG8gV29ybGQhIExldCdzIGVuam95IEV4bWVudCE=""
                }
            }
        }
        ```

        #### 親データを指定する場合
        * parent_idとparent_typeを設定することで、親データを登録することができる
        * 前提条件として「1:nのリレーションが設定されている」「親データがすでに登録済である」こと

        ```
        {
           "parent_type": "contract",
           "parent_id": 2
           "value": {
                "num": 10,
                "price": 10000
            }
        }
        ```


        #### 複数件登録する場合
        * POSTデータを、配列で複数件送信することで、複数データを登録することができる
        * 1件でもエラーが発生した場合は、すべてのデータを登録しない
        * 1度に登録できる件数は100件まで
        * 配列の指定方法は2パターン存在するが、機能に差異はない

        ■パターン１：
        ```
        {
           "value": [
              {
                "parent_type": "contract",
                "parent_id": 2
                "num": 10,
                "price": 10000
              },
              {
                "parent_type": "contract",
                "parent_id": 5
                "num": 3,
                "price": 8000
              }
            ]
        }
        ```

        ■パターン２：
        ```
        {
           "data": [
             {
                "parent_type": "contract",
                "parent_id": 2
                "value":{
                  "num": 10,
                  "price": 10000
                }
             },
             {
                "parent_type": "contract",
                "parent_id": 5
                "value":{
                  "num": 3,
                  "price": 8000
                }
              }
            ]
        }
        ```

        #### カスタム列の種類が「選択肢 (他のテーブルの値一覧から選択)」で、id以外をキーとして新規作成を行いたい場合
        パラメータ「findKeys」を追加することにより、id以外の値をキーとできます。  
        例：「契約」テーブルのカスタムデータを登録時、列「顧客(customer)」のデータを、「顧客」テーブル内の「顧客名(customer_code)」を使用したい場合  

        ■通常時：
        ```
        {
            value: {
                'contract_code': 'C00001',
                'customer': '1'
            }
        }
        ```

        ■findKeys使用時：
        ```
        {
            value: {
                'contract_code': 'C00001',
                'customer': 'CompABC'
            },
            findKeys: {
                'customer': 'customer_name'
            }
        }
        ```
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  oneOf:
                    - type: object
                      description: (1)登録するデータ。1件のみの場合。
                      properties:
                        column_1:
                          type: string
                          description: 項目は、登録するテーブルのカスタム列に合わせる
                        column_n:
                          type: string
                          description: 項目は、登録するテーブルのカスタム列に合わせる
                    - type: array
                      description: (2)登録するデータ。複数件登録する場合
                      items:
                        type: object
                        description: ''
                        properties:
                          parent_type:
                            type: string
                            description: 親データを指定する場合のみ
                          parent_id:
                            type: integer
                            description: 親データを指定する場合のみ
                          column_1:
                            type: string
                            description: 項目は、登録するテーブルのカスタム列に合わせる
                          column_n:
                            type: string
                            description: 項目は、登録するテーブルのカスタム列に合わせる
                  description: ※1件登録するか、複数件登録するかで、送信するパラメータが変更になる
                findKeys:
                  type: object
                  description: カスタム列の種類が「選択肢 (他のテーブルの値一覧から選択)」で、id以外をキーとして新規作成を行いたい場合。項目は、登録するテーブルのカスタム列に合わせる
                  properties:
                    (column_name):
                      type: string
                      description: 参照先のテーブルのカラム名を設定
                data:
                  type: array
                  description: 複数件登録時、かつvalueを設定しない場合のみ指定可能
                  items:
                    type: object
                    properties:
                      parent_type:
                        type: string
                        description: 親データを指定する場合のみ
                      parent_id:
                        type: integer
                        description: 親データを指定する場合のみ
                      value:
                        type: object
                        description: ''
                        properties:
                          column_1:
                            type: string
                            description: 項目は、登録するテーブルのカスタム列に合わせる
                          column_n:
                            type: string
                            description: 項目は、登録するテーブルのカスタム列に合わせる
                parent_type:
                  type: string
                  description: 親テーブル名。登録データが1件で親データを指定する場合のみ指定する
                parent_id:
                  type: integer
                  description: 親テーブルのデータID。登録データが1件で親データを指定する場合のみ指定する
                label:
                  type: integer
                  default: 0
                  description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
            examples:
              Example:
                value:
                  value:
                    body: テストです。
                    order: '1'
                    title: テスト
                    priority: 3
                    view_flg: 1
        description: ''
      security:
        - OAuth2認証: []
      operationId: post-values
  '/api/data/{tableKey}/query':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        schema:
          type: string
        description: テーブル名(Ex. information)
    get:
      summary: カスタムデータ検索
      tags:
        - データ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    default: 1
                    description: 現在のページ
                  first_page_url:
                    type: string
                    description: 最初のページのURL
                  last_page:
                    type: integer
                    description: 最後のページ番号
                  path:
                    type: string
                  per_page:
                    type: integer
                    description: 1ページあたりの表示件数
                  to:
                    type: integer
                    description: 表示しているデータの終了番号
                  total:
                    type: integer
                    description: データの全件数
                  from:
                    type: integer
                    description: 表示しているデータの開始番号
                  last_page_url:
                    type: string
                    description: 最後のページのURL
                  prev_page_url:
                    type: string
                    description: 前のページのURL
                  next_page_url:
                    type: string
                    description: 次のページのURL
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomValue'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 1
                        suuid: 39c97ba08c6e392a125a
                        parent_type: null
                        parent_id: null
                        value:
                          body: <p>Exmentは、かんたん、お手頃なデータ管理Webシステムです。&nbsp;</p>
                          order: '5'
                          title: Exmentへようこそ！
                          priority: '3'
                          view_flg: '1'
                        created_at: '2019-01-04 18:48:15'
                        updated_at: '2019-01-04 19:50:55'
                        deleted_at: null
                        deleted_user_id: null
                        created_user_id: null
                        updated_user_id: null
                        label: Exmentへようこそ！
                        workflow_value: null
                    first_page_url: 'http://localhost/admin/api/data/information/query?q=Exment&count=20&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/data/information/query?q=Exment&count=20&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/data/information/query'
                    per_page: 20
                    prev_page_url: null
                    to: 1
                    total: 1
      description: |-
        #### 処理概要
        * 特定のカスタムテーブルに登録している、カスタムデータを検索する
        * ログインユーザーに権限のあるデータのみ、一覧の対象となる
        * 「検索インデックス」に登録している列が、検索対象列となる
        * 検索は前方一致。全文一致で検索を行いたい場合は、<a href="https://exment.net/docs/#/ja/search?id=%e8%a3%9c%e8%b6%b3%e3%83%87%e3%83%bc%e3%82%bf%e6%a4%9c%e7%b4%a2%e3%82%92%e9%83%a8%e5%88%86%e4%b8%80%e8%87%b4%e3%81%ab%e5%88%87%e3%82%8a%e6%9b%bf%e3%81%88" target="_blank">こちら</a>に従い、設定が必要
        * 取得されるvalue配列の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v2.1.6 追加
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.7 valuetypeパラメータ追加
        - v5.0.1 childrenパラメータ追加


        #### リレーションの子データを取得する場合
        childrenパラメータが1のとき、そのデータの子データも同時に取得する。  
        ※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可  
        "data"配列に"children"が追加され、その中に、該当の子テーブルのデータ一覧が追加される。  
        その時の戻り値の例は、以下のようになる。(一部割愛)　ここでは、子テーブルは"child_table"としている。  

        ```
        {
          "current_page": 1,
          "data": [
            {
              "id": 1,
              "suuid": "a1b2f1fc0e564e3e2ece",
              "parent_type": null,
              "parent_id": null,
              "value": {
                "date": "2022-07-30",
                "text": "test_1",
                "user": "1",
                "email": "foovartest1@test.com.test"
              },
              "created_at": "2022-07-29 09:35:42",
              "updated_at": "2022-07-29 09:35:42",
              "deleted_at": null,
              "deleted_user_id": null,
              "created_user_id": "1",
              "updated_user_id": "1",
              "children": {
                "child_table": [
                  {
                    "id": 1,
                    "suuid": "c7751f097aa5e0a6091c",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-30",
                      "text": "test_1",
                      "user": "1",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "1",
                    "updated_user_id": "1"
                  },
                  {
                    "id": 11,
                    "suuid": "17e2f47ebf89e6b09c0a",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-31",
                      "text": "test_2",
                      "user": "2",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "2",
                    "updated_user_id": "2"
                  }
                ]
              }
            }
          ]
        }
        ```
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: 検索文字列
          required: true
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: integer
            default: '0'
          in: query
          name: label
          description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
        - schema:
            type: string
          in: query
          name: valuetype
          description: 返却する値の種類。"text"の場合、画面に表示する文言を返却する
        - schema:
            type: integer
          in: query
          description: 1のとき、そのデータの子データも同時に取得する。※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可
          name: children
      security:
        - OAuth2認証: []
      operationId: get-values-query
      requestBody: {}
  '/api/data/{tableKey}/query-column':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        schema:
          type: string
        description: テーブル名(Ex. information)
    get:
      summary: カスタムデータ検索(列指定)
      tags:
        - データ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    default: 1
                    description: 現在のページ
                  first_page_url:
                    type: string
                    description: 最初のページのURL
                  last_page:
                    type: integer
                    description: 最後のページ番号
                  path:
                    type: string
                  per_page:
                    type: integer
                    description: 1ページあたりの表示件数
                  to:
                    type: integer
                    description: 表示しているデータの終了番号
                  total:
                    type: integer
                    description: データの全件数
                  from:
                    type: integer
                    description: 表示しているデータの開始番号
                  last_page_url:
                    type: string
                    description: 最後のページのURL
                  prev_page_url:
                    type: string
                    description: 前のページのURL
                  next_page_url:
                    type: string
                    description: 次のページのURL
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomValue'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 1
                        suuid: 39c97ba08c6e392a125a
                        parent_type: null
                        parent_id: null
                        value:
                          body: <p>Exmentは、かんたん、お手頃なデータ管理Webシステムです。&nbsp;</p>
                          order: '5'
                          title: Exmentへようこそ！
                          priority: '3'
                          view_flg: '1'
                        created_at: '2019-01-04 18:48:15'
                        updated_at: '2019-01-04 19:50:55'
                        deleted_at: null
                        deleted_user_id: null
                        created_user_id: null
                        updated_user_id: null
                        label: Exmentへようこそ！
                        workflow_value: null
                    first_page_url: 'http://localhost/admin/api/data/information/query?q=Exment&count=20&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/data/information/query?q=Exment&count=20&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/data/information/query'
                    per_page: 20
                    prev_page_url: null
                    to: 1
                    total: 1
      description: |
        #### 処理概要
        * 特定のカスタムテーブルに登録している、カスタムデータを検索する
        * ログインユーザーに権限のあるデータのみ、一覧の対象となる
        * カスタム列ごとに検索条件と値を指定する。それぞれの検索条件がすべて合致した場合に、検索を実行する
        * 取得されるvalue配列の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v3.0.8 追加
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.7 valuetypeパラメータ追加
        - v3.3.2 検索条件に"like"追加。OR検索に対応、orderbyパラメータの追加
        - v5.0.1 childrenパラメータ追加

        #### 検索条件の指定方法
        * パラメータ「q」に、それぞれの列名を指定して検索する。複数の列を指定する場合は、カンマ区切りを行う。
        * 検索条件は、以下のものに対応している。  
            - eq : 完全一致
            - ne : 一致しない
            - gt : より上
            - gte : 以上
            - lt : より下
            - lte : 以下
            - like : LIKE検索。値に"%"使用可能
        * クエリの設定方法は、"(列名) eq (検索値)"となる。  
        ※URLエンコードは行うこと
        * 複数の検索値で検索を行う場合、通常はAND検索を行う。パラメータ「or=1」を指定した場合、OR検索となる。

        ■例1：お知らせ(information)テーブルで、"表示フラグ(view_flg)"が"1"のデータ一覧を取得する場合

        ```
        // URLエンコードは行うこと
        /api/data/information/query-column?q=view_flg eq 1
        ```

        ■例2：お知らせ(information)テーブルで、"表示フラグ(view_flg)"が"1"、"タイトル(title)"が"テスト"のデータ一覧を取得する場合

        ```
        // URLエンコードは行うこと
        /api/data/information/query-column?q=view_flg eq 1,title eq テスト
        ```

        ■例3：お知らせ(information)テーブルで、"表示フラグ(view_flg)"が"1"、または"タイトル(title)"が"テスト"のデータ一覧を取得する場合

        ```
        // URLエンコードは行うこと
        /api/data/information/query-column?q=view_flg eq 1,title eq テスト&or=1
        ```

        #### リレーションの子データを取得する場合
        childrenパラメータが1のとき、そのデータの子データも同時に取得する。  
        ※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可  
        "data"配列に"children"が追加され、その中に、該当の子テーブルのデータ一覧が追加される。  
        その時の戻り値の例は、以下のようになる。(一部割愛)　ここでは、子テーブルは"child_table"としている。  

        ```
        {
          "current_page": 1,
          "data": [
            {
              "id": 1,
              "suuid": "a1b2f1fc0e564e3e2ece",
              "parent_type": null,
              "parent_id": null,
              "value": {
                "date": "2022-07-30",
                "text": "test_1",
                "user": "1",
                "email": "foovartest1@test.com.test"
              },
              "created_at": "2022-07-29 09:35:42",
              "updated_at": "2022-07-29 09:35:42",
              "deleted_at": null,
              "deleted_user_id": null,
              "created_user_id": "1",
              "updated_user_id": "1",
              "children": {
                "child_table": [
                  {
                    "id": 1,
                    "suuid": "c7751f097aa5e0a6091c",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-30",
                      "text": "test_1",
                      "user": "1",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "1",
                    "updated_user_id": "1"
                  },
                  {
                    "id": 11,
                    "suuid": "17e2f47ebf89e6b09c0a",
                    "parent_type": "parent_table",
                    "parent_id": "1",
                    "value": {
                      "date": "2022-07-31",
                      "text": "test_2",
                      "user": "2",
                      "email": "foovartest1@test.com.test"
                    },
                    "created_at": "2022-07-29 09:35:44",
                    "updated_at": "2022-07-29 09:35:44",
                    "deleted_at": null,
                    "deleted_user_id": null,
                    "created_user_id": "2",
                    "updated_user_id": "2"
                  }
                ]
              }
            }
          ]
        }
        ```
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: 検索文字列。クエリ検索の指定方法は、上記の例を参考にすること
          required: true
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: integer
            default: '0'
          in: query
          name: label
          description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
        - schema:
            type: string
          in: query
          name: valuetype
          description: 返却する値の種類。"text"の場合、画面に表示する文言を返却する
        - schema:
            type: integer
          in: query
          name: or
          description: 複数列で検索を行う場合で、1とした場合、OR検索を行う
        - schema:
            type: string
          in: query
          name: orderby
          description: データの並べ替えを行う場合、並べ替えの列名。複数ある場合はカンマ区切り。逆順は、「id desc」のように半角スペースを追加する
        - schema:
            type: integer
          in: query
          name: children
          description: 1のとき、そのデータの子データも同時に取得する。※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可
      security:
        - OAuth2認証: []
      operationId: get-values-query-column
  '/api/data/{tableKey}/{id}':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
        schema:
          type: string
      - type: string
        name: id
        in: path
        required: true
        description: カスタムデータのID
        schema:
          type: string
    get:
      summary: カスタムデータ情報取得
      tags:
        - データ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValue'
              examples:
                Example:
                  value:
                    id: 8
                    suuid: 946a85f121a7d9b2ab72
                    parent_type: null
                    parent_id: null
                    value:
                      body: テストです。
                      order: '1'
                      title: テスト
                      priority: 3
                      view_flg: 1
                    created_at: '2019-11-15 16:44:41'
                    updated_at: '2019-11-15 16:44:41'
                    deleted_at: null
                    deleted_user_id: null
                    created_user_id: null
                    updated_user_id: null
                    label: テスト
      description: |
        #### 処理概要
        * 特定のカスタムテーブルに登録している、カスタムデータ情報を取得する
        * ログインユーザーに権限のないデータだった場合、403エラーが発生する
        * 取得されるvalue配列の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v1.1.0 追加
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.7 valuetypeパラメータ追加
        - v5.0.1 childrenパラメータ追加


        #### リレーションの子データを取得する場合
        childrenパラメータが1のとき、そのデータの子データも同時に取得する。  
        ※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可  
        配列の直下に"children"が追加され、その中に、該当の子テーブルのデータ一覧が追加される。  
        その時の戻り値の例は、以下のようになる。(一部割愛)　ここでは、子テーブルは"child_table"としている。  

        ```
        {
          "id": 1,
          "suuid": "a1b2f1fc0e564e3e2ece",
          "parent_type": null,
          "parent_id": null,
          "value": {
            "date": "2022-07-30",
            "text": "test_1",
            "user": "1",
            "email": "foovartest1@test.com.test"
          },
          "created_at": "2022-07-29 09:35:42",
          "updated_at": "2022-07-29 09:35:42",
          "deleted_at": null,
          "deleted_user_id": null,
          "created_user_id": "1",
          "updated_user_id": "1",
          "children": {
            "child_table": [
              {
                "id": 1,
                "suuid": "c7751f097aa5e0a6091c",
                "parent_type": "parent_table",
                "parent_id": "1",
                "value": {
                  "date": "2022-07-30",
                  "text": "test_1",
                  "user": "1",
                  "email": "foovartest1@test.com.test"
                },
                "created_at": "2022-07-29 09:35:44",
                "updated_at": "2022-07-29 09:35:44",
                "deleted_at": null,
                "deleted_user_id": null,
                "created_user_id": "1",
                "updated_user_id": "1"
              },
              {
                "id": 11,
                "suuid": "17e2f47ebf89e6b09c0a",
                "parent_type": "parent_table",
                "parent_id": "1",
                "value": {
                  "date": "2022-07-31",
                  "text": "test_2",
                  "user": "2",
                  "email": "foovartest1@test.com.test"
                },
                "created_at": "2022-07-29 09:35:44",
                "updated_at": "2022-07-29 09:35:44",
                "deleted_at": null,
                "deleted_user_id": null,
                "created_user_id": "2",
                "updated_user_id": "2"
              }
            ]
          }
        }
        ```
      requestBody: {}
      security:
        - OAuth2認証: []
      operationId: get-value
      parameters:
        - schema:
            type: integer
            default: '0'
          in: query
          name: label
          description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
        - schema:
            type: string
          in: query
          name: valuetype
          description: 返却する値の種類。"text"の場合、画面に表示する文言を返却する
        - schema:
            type: integer
          in: query
          name: children
          description: 1のとき、そのデータの子データも同時に取得する。※カスタムリレーション設定が行われている場合のみ利用可。カスタム列の「選択肢 (他のテーブルの値一覧から選択)」は取得不可
    put:
      summary: カスタムデータ情報更新
      tags:
        - データ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomValue'
              examples:
                Example:
                  value:
                    id: 8
                    suuid: 946a85f121a7d9b2ab72
                    parent_type: null
                    parent_id: null
                    value:
                      body: テストです。
                      order: '1'
                      title: テスト更新
                      priority: 3
                      view_flg: 1
                    created_at: '2019-11-15 16:44:41'
                    updated_at: '2019-11-15 18:01:34'
                    deleted_at: null
                    deleted_user_id: null
                    created_user_id: null
                    updated_user_id: '1'
                    label: テスト更新
      description: |
        #### 処理概要
        * カスタムデータ情報を更新する
        * ログインユーザーに権限のないデータだった場合、403エラーが発生する
        * 更新が発生する列の情報のみ、value配列内に値を代入してPUTする。送信値の形式や型については、<a href="https://exment.net/docs/#/ja/column_reference" target="_blank">こちら</a>をご参照ください
        * 列"updated_at"を行うことで、排他制御を行うことが可能

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集

        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        - v1.1.0 対応
        - v3.1.0 画像・ファイル列へのファイル保存に対応
        - v3.1.2 labelパラメータ追加。1のとき、結果にlabelを追加します。
        - v3.1.10 排他制御に対応

        #### ファイル・画像列にファイルを保存する場合

        * 以下のように、value->(ファイル・画像列)に、ファイル名・ファイルのbase64文字列を指定してください。
        * 例：ファイル列"file"に、ファイルを保存する場合

        ```
        {
           "value": {
                "title": "test",
                "file": {
                    "name" : "hello.txt",
                    "base64" : 'aGVsbG8gV29ybGQhIExldCdzIGVuam95IEV4bWVudCE='
                }
            }
        }
        ```

        #### カスタム列の種類が「選択肢 (他のテーブルの値一覧から選択)」で、id以外をキーとして更新を行いたい場合
        パラメータ「findKeys」を追加することにより、id以外の値をキーとできます。  
        例：「契約」テーブルのカスタムデータを更新時、列「顧客(customer)」のデータを、「顧客」テーブル内の「顧客名(customer_code)」を使用したい場合  

        ■通常時：
        ```
        {
            value: {
                "contract_code": "C00001",
                "customer": '1'
            }
        }
        ```

        ■findKeys使用時：
        ```
        {
            value: {
                "contract_code": "C00001",
                "customer": "株式会社ABC"
            },
            findKeys: {
                "customer": "customer_name"
            }
        }
        ```


        #### 親データを指定する場合
        * parent_idとparent_typeを設定することで、親データを登録することができる
        * 前提条件として「1:nのリレーションが設定されている」「親データがすでに登録済である」こと

        ```
        {
           "parent_type": "contract",
           "parent_id": 2
           "value": {
                "price": 10000
            }
        }
        ```


        #### 排他制御
        * updated_at列に日付を追加することで、排他制御を行うことができます。指定した日時と、対象データの最新の更新日時が異なっていた場合、エラーを返却します。

        ```
        {
           "value": {
                "price": 10000
            },
            "updated_at": "2020/04/03 12:00:00"
        }
        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              properties:
                value:
                  type: object
                  description: ''
                  properties:
                    view_flg:
                      type: integer
                      description: 項目は、登録するテーブルのカスタム列に合わせる
                    order:
                      type: integer
                      description: 項目は、登録するテーブルのカスタム列に合わせる
                    priority:
                      type: integer
                      description: 項目は、登録するテーブルのカスタム列に合わせる
                    title:
                      type: string
                      description: 項目は、登録するテーブルのカスタム列に合わせる
                    body:
                      type: string
                      description: 項目は、登録するテーブルのカスタム列に合わせる
                findKeys:
                  type: object
                  description: カスタム列の種類が「選択肢 (他のテーブルの値一覧から選択)」で、id以外をキーとして新規作成を行いたい場合。項目は、登録するテーブルのカスタム列に合わせる
                  properties:
                    (column_name):
                      type: string
                      description: 参照先のテーブルのカラム名を設定
                parent_type:
                  type: string
                  description: 親データを指定する場合のみ
                parent_id:
                  type: integer
                  description: 親データを指定する場合のみ
                label:
                  type: integer
                  default: 0
                  description: 結果にlabelを含めるかどうか。1の場合含める(※速度が若干遅くなります)
            examples:
              Example:
                value:
                  value:
                    body: テストです。
                    order: '1'
                    title: テスト
                    priority: 3
                    view_flg: 1
      security:
        - OAuth2認証: []
      operationId: put-value
      parameters: []
    delete:
      summary: カスタムデータ情報削除
      tags:
        - データ
      responses:
        '204':
          description: No Content
      description: |
        #### 処理概要
        * カスタムデータ情報を論理削除する
        * ログインユーザーに権限のないデータだった場合、403エラーが発生する
        * URLパラメータ{id}は複数件指定可能。その場合、カンマ区切りで指定。複数件を同時に削除する場合、同時に削除できる件数は100件まで
        * パラメータ"force=1"を追加することで、物理削除を実行する。すでに論理削除しているデータに対しても実施可能

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集

        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        - v1.1.0 追加
        - v3.0.13 複数件削除に対応
        - v4.0.7 データの物理削除に対応
      security:
        - OAuth2認証: []
      operationId: delete-value
      parameters:
        - schema:
            type: integer
          in: query
          name: force
          description: 1のとき、データの物理削除を実施する
  /api/wf/workflow:
    get:
      summary: ワークフロー一覧取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Workflow'
                  - $ref: '#/components/schemas/Paginate'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 1
                        suuid: 4a6e46c8f716dda2f2a5
                        workflow_type: '0'
                        workflow_view_name: 申請フロー
                        start_status_name: 未実施
                        setting_completed_flg: '1'
                        created_at: '2019-11-14 13:27:45'
                        updated_at: '2019-11-14 16:59:37'
                        created_user_id: '1'
                        updated_user_id: '1'
                      - id: 2
                        suuid: e78c0fdefac9bb91623a
                        workflow_type: '0'
                        workflow_view_name: フロー2
                        start_status_name: 未実施
                        setting_completed_flg: '1'
                        created_at: '2019-11-14 17:07:04'
                        updated_at: '2019-11-18 13:38:47'
                        created_user_id: '1'
                        updated_user_id: '1'
                    first_page_url: 'http://localhost/admin/webapi/wf/workflow?page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/webapi/wf/workflow?page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/webapi/wf/workflow'
                    per_page: 20
                    prev_page_url: null
                    to: 2
                    total: 2
      description: |2


























































































































         #### 処理概要
        * ワークフロー一覧を取得する
        * 「設定完了」が実行されているワークフローのみ、一覧で取得する

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      parameters:
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: integer
            default: '0'
          in: query
          name: all
          description: 1の場合、設定完了されていないワークフローも含める
          required: true
        - schema:
            type: string
          in: query
          name: expands
          description: ワークフローに紐づく、ステータス設定一覧、アクション設定一覧を取得可能。"statuses"、"actions"を指定可能。複数の場合はカンマ区切り。
        - schema:
            type: string
          in: query
          name: id
          description: 取得したいワークフローの、ID絞り込みを行う場合設定。カンマ区切り
      security:
        - OAuth2認証: []
      operationId: get-workflows
    parameters: []
  '/api/wf/workflow/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: ワークフローID
    get:
      summary: ワークフロー情報取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
      description: |
        #### 処理概要
        * ワークフローのIDから、ワークフロー情報を取得する

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      parameters:
        - schema:
            type: string
          in: query
          name: expands
          description: ワークフローに紐づく、ステータス設定一覧、アクション設定一覧を取得可能。"statuses"、"actions"を指定可能。複数の場合はカンマ区切り。
      security:
        - OAuth2認証: []
      operationId: get-workflow
  '/api/wf/workflow/{workflow_id}/statuses':
    parameters:
      - type: string
        name: workflow_id
        in: path
        required: true
        schema:
          type: integer
        description: ワークフローID
    get:
      summary: 指定のワークフローのステータス一覧取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowStatus'
      description: |
        #### 処理概要
        * workflow_idで指定したワークフローの、ワークフローステータス一覧を取得する

        #### Exment権限(Permission)
        + なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      parameters: []
      operationId: get-workflow-statuses
  '/api/wf/workflow/{workflow_id}/actions':
    parameters:
      - type: string
        name: workflow_id
        in: path
        required: true
        schema:
          type: integer
        description: ワークフローID
    get:
      summary: 指定のワークフローのアクション一覧取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowAction'
      description: |-
        #### 処理概要
        * workflow_idで指定したワークフローの、ワークフローアクション一覧を取得する

        #### Exment権限(Permission)
        + なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      operationId: get-workflow-actions
  '/api/wf/status/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: ステータスID
    get:
      summary: ワークフローのステータス取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStatus'
      description: |-
        #### 処理概要
        * ワークフローのステータス情報を取得する

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      parameters: []
      operationId: get-workflow-status
  '/api/wf/action/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ワークフローアクションID
        schema:
          type: integer
    get:
      summary: ワークフローのアクション取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowAction'
      description: |
        #### 処理概要
        * ワークフローアクション情報を取得する

        #### Exment権限(Permission)
        なし

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      operationId: get-workflow-action
  '/api/wf/data/{tableKey}/{id}/value':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        schema:
          type: string
        description: テーブル名(Ex. information)
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: カスタムデータのID
    get:
      summary: 特定のデータに対し、現在のワークフローの実行値を取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/WorkflowValue'
                  - type: object
                    properties:
                      workflow_status_from:
                        $ref: '#/components/schemas/WorkflowStatus'
                      workflow_status:
                        $ref: '#/components/schemas/WorkflowStatus'
                      workflow_action:
                        $ref: '#/components/schemas/WorkflowAction'
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのカスタムデータの、現在のワークフローの実行値を取得する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧


        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      operationId: get-workflow-value
      parameters:
        - schema:
            type: string
          in: query
          name: expands
          description: ワークフロー実行値に紐づく、実行前ステータス情報、実行後ステータス情報、アクション情報を取得可能。"status_from"、"status_to"、"action"を指定可能。複数の場合はカンマ区切り。
    post:
      summary: 特定のデータに対し、ワークフローを実行
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、ワークフローを実行する
        * ワークフローアクションIDをPOSTすることによって、ワークフローを実行する
        * アクション設定の「実行可能ユーザー」の値が「前アクションの実行可能ユーザーが選択」の場合、次パラメータの"users(アクションを実行するユーザーID一覧)"、もしくは"organizations(組織ID一覧)"どちらかが必須となる
        * 現在のステータスと合わないアクションを実行した場合、エラーコード204を返却する
        * 実行ユーザーが、そのアクションを行う権限が無かった場合、エラーコード204を返却する


        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧



        #### APIスコープ(scope)
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workflow_action_id:
                  type: integer
                  description: 実行するワークフローアクションID
                comment:
                  type: string
                  description: ワークフローのコメント。そのアクションが、comment_typeが"required"の場合は必須。"not_use"の場合は無視される
                next_users:
                  type: string
                  description: アクション設定の「実行可能ユーザー」が、「前アクションの実行可能ユーザーが選択」の場合、次のアクションを実行するユーザーIDをカンマ区切りで入力
                next_organizations:
                  type: string
                  description: アクション設定の「実行可能ユーザー」が、「前アクションの実行可能ユーザーが選択」の場合、次のアクションを実行する組織IDをカンマ区切りで入力
              required:
                - workflow_action_id
        description: ''
  '/api/wf/data/{tableKey}/{id}/work_users':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
        schema:
          type: string
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: カスタムデータのID
    get:
      summary: 特定のデータに対し、作業ユーザーの一覧を取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    description: ユーザー一覧
                    items:
                      $ref: '#/components/schemas/CustomValue'
                  organizations:
                    type: array
                    description: 組織一覧
                    items:
                      $ref: '#/components/schemas/CustomValue'
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのカスタムデータの、現在の作業ユーザー一覧を取得する
        * アクション設定で、「特殊アクション」にチェックが入っていないアクションのみ、取得の対象とする
        * すべてのアクションの作業ユーザーを取得する場合、クエリ文字列「all=1」を追加する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      parameters:
        - schema:
            type: integer
            default: '0'
          in: query
          name: as_user
          description: 1のとき、「組織」としてアクション設定している作業者を、その組織に所属しているユーザー一覧に変換する
        - schema:
            type: integer
          in: query
          name: all
          description: 1のとき、すべてのアクションの対象ユーザーを取得する
      operationId: get-workflow-value-users
  '/api/wf/data/{tableKey}/{id}/actions':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
        schema:
          type: string
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: カスタムデータのID
    get:
      summary: 特定のデータに対し、実行できる次のアクションの一覧を取得
      tags:
        - ワークフロー
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowAction'
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowAction'
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのカスタムデータの、実行できる次のアクションの一覧を取得する
        * ログインユーザーが実行できるアクションのみに絞り込む
        * ログインユーザーが実行できるかどうかを問わず、すべてのアクションを取得する場合、クエリ文字列「all=1」を追加する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      parameters:
        - schema:
            type: integer
            default: '0'
          in: query
          name: all
          description: 1のとき、ログインユーザーが実行できるかどうかを問わず、すべてのアクションを取得する
      security:
        - OAuth2認証: []
      operationId: get-workflow-value-actions
  '/api/wf/data/{tableKey}/{id}/histories':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
        schema:
          type: string
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: integer
        description: カスタムデータのID
    get:
      summary: 特定のデータに対し、ワークフローの履歴一覧を取得
      tags:
        - ワークフロー
      responses: {}
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのカスタムデータの、ワークフローの履歴一覧を取得する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + workflow_read
        + workflow_execute

        #### 対応バージョン
        v3.0.8
      security:
        - OAuth2認証: []
      operationId: get-workflow-value-histories
  /api/notify:
    get:
      summary: 通知一覧を取得
      tags:
        - 通知
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Notify'
                  - $ref: '#/components/schemas/Paginate'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - id: 7
                        notify_id: '0'
                        parent_type: null
                        parent_id: null
                        target_user_id: '2'
                        trigger_user_id: '2'
                        notify_subject: テストテストテスト
                        notify_body: 本文です本文です本文です本文です本文です本文です本文です本文です
                        read_flg: '0'
                        created_at: '2019-11-18 19:21:36'
                        updated_at: '2019-11-18 19:21:36'
                        created_user_id: null
                        updated_user_id: null
                      - id: 4
                        notify_id: '1'
                        parent_type: information
                        parent_id: '8'
                        target_user_id: '2'
                        trigger_user_id: '1'
                        notify_subject: '[テスト]データが作成されました'
                        notify_body: |
                          ユーザーにより、お知らせのデータが作成されました。
                          以下の内容をご確認ください。

                          作成ユーザー:
                          作成日時:2019-11-15 16:44:41
                          作成データ:<a href='http://localhost/admin/data/information/8'>テスト</a>
                        read_flg: '0'
                        created_at: '2019-11-15 16:44:43'
                        updated_at: '2019-11-15 16:44:43'
                        created_user_id: null
                        updated_user_id: null
                    first_page_url: 'http://localhost/admin/api/notify?count=5&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/notify?count=5&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/notify'
                    per_page: 20
                    prev_page_url: null
                    to: 5
                    total: 5
      operationId: get-notifies
      description: |-
        #### 処理概要
        * 通知バーの通知一覧を取得する
        * 未読の通知のみ取得する。すべての通知を取得する場合、パラメータ"all=1"を追加する

        #### Exment権限(Permission)
        + なし

        #### APIスコープ(scope)
        + notify_read
        + notify_write

        #### 対応バージョン
        v3.0.8
      parameters:
        - schema:
            type: integer
            default: '0'
          in: query
          name: all
          description: 1の場合、すべての通知を取得する
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
    post:
      summary: 通知追加
      tags:
        - 通知
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notify'
              examples:
                Example:
                  value:
                    notify_id: 0
                    target_user_id: '2'
                    notify_subject: テストテストテスト
                    notify_body: 本文です本文です本文です本文です本文です本文です本文です本文です
                    trigger_user_id: '2'
                    updated_at: '2019-11-18 19:21:36'
                    created_at: '2019-11-18 19:21:36'
                    id: 7
      description: |-
        #### 処理概要
        * 指定ユーザーに通知を送信する
        * 通知は通知バーにのみ追加される

        #### Exment権限(Permission)
        + なし

        #### APIスコープ(scope)
        + notify_write

        #### 対応バージョン
        v3.0.8
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                target_users:
                  type: string
                  description: 通知送信先のユーザーID。複数ある場合にはカンマ区切り
                notify_subject:
                  type: string
                  description: 通知件名
                notify_body:
                  type: string
                  description: 通知本文
              required:
                - target_users
                - notify_subject
                - notify_body
            examples:
              Example:
                value:
                  target_users: '2'
                  notify_subject: テストテストテスト
                  notify_body: 本文です本文です本文です本文です本文です本文です本文です本文です
        description: ''
      operationId: post-notify
  '/api/files/{uuid}':
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
        description: ファイルに割り振られたランダム文字列
    get:
      summary: ファイルのダウンロード
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                description: ※ファイルのストリームが返却される。Content-Typeは、ファイルの種類によって変わる
            application/json:
              schema:
                type: object
                description: base64=1の場合。
                properties:
                  type:
                    type: string
                    description: ファイル形式
                  name:
                    type: string
                    description: ファイル名
                  base64:
                    type: string
                    description: ファイルのbase64文字列
              examples:
                base64 is 1:
                  value:
                    type: image/jpeg
                    name: test.jpg
                    base64: aaaaaXXXXXXX.....
      operationId: get-file
      description: |
        #### 処理概要
        * ファイルのダウンロードを実施する
        * クエリ文字列がない場合、ファイルはストリーム形式でダウンロードされる。"base64=1"の場合、base64形式で返却する

        #### ファイルURL取得方法
        ダウンロード用のファイルURLを取得する方法です。

        ##### カスタムデータ取得APIで、クエリ文字列「valuetype=text」を追加する
        カスタム列の種類がファイル・画像の場合、値がURLになります。

        ```
        例：GET
        /api/data/testtable/1?valuetype=text

        戻り値(一部)
        {
            "id": 1,
            "value": {
                "text": "test_1",
                "file": "http://locallost/admin/api/files/c09ff3a0-7677-11ea-9edf-178831242ff9"
            }
        }
        ```


        ##### ドキュメント(添付ファイル)一覧の取得APIで取得する
        「api_url」が、APIから実行するためのURLです。

        ```
        例：GET
        /api/document/testtable/1

        戻り値(一部)
        {
            "data": [
                {
                    "name": "information.htm",
                    "url": "http://locallost/admin/files/91ed9b30-767b-11ea-a225-07e73286c089",
                    "api_url": "http://locallost/admin/api/files/91ed9b30-767b-11ea-a225-07e73286c089",
                    "created_at": "2020-04-04 22:52:48",
                    "created_user_id": "1"
                }
            ]
        }
        ```

        #### リクエスト時のクエリ文字列と、レスポンスの内容
        ##### リクエスト時にbase64=1を入れない場合
        レスポンス値は、ファイルのストリーム形式となります。

        ##### リクエスト時にbase64=1を入れる場合
        レスポンス値は、以下の形式のjsonとなります。

        ```
        {
          "type": "image/jpeg",
          "name": "test.jpg",
          "base64": "aaaaaXXXXXXX....."
        }
        ```


        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        v3.1.7
      parameters:
        - schema:
            type: integer
          in: query
          name: base64
          description: 1の場合、base64文字列を含んだjson型で返却する
      tags:
        - ファイル・ドキュメント
    delete:
      summary: ファイルの削除
      responses:
        '204':
          description: No Content
      operationId: delete-files
      description: |
        #### 処理概要
        * ファイルの削除を実施する
        * 特定のデータに紐付く添付ファイルの場合、添付ファイル情報も同時に削除する

        #### ファイルURL取得方法
        「ファイルのダウンロード」をご確認ください。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集

        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        v3.1.10
      parameters: []
      tags:
        - ファイル・ドキュメント
  '/api/files/{tableKey}/{filename}':
    parameters:
      - schema:
          type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
      - schema:
          type: string
        name: filename
        in: path
        required: true
        description: ファイル名
    get:
      summary: ファイルのダウンロード
      tags:
        - ファイル・ドキュメント
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
              examples: {}
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  name:
                    type: string
                  base64:
                    type: string
              examples:
                base64 is 1:
                  value:
                    type: image/jpeg
                    name: test.jpg
                    base64: aaaaaXXXXXXX.....
      operationId: get-file2
      description: |
        #### 処理概要
        * ファイルのダウンロードを実施する
        * クエリ文字列がない場合、ファイルはストリーム形式でダウンロードされる。"base64=1"の場合、base64形式で返却する

        #### ファイルURL取得方法
        ダウンロード用のファイルURLを取得する方法です。

        ##### カスタムデータ取得APIで取得する
        カスタム列の種類がファイル・画像の場合、取得した値を加工します。

        ```
        例：GET
        /api/data/testtable/1

        戻り値(一部)
        {
            "id": 1,
            "value": {
                "text": "test_1",
                "file": "testtable/c09ff510-7677-11ea-9096-a14cacaee56f.txt"
            }
        }
        ```

        この値を使用し、以下のようなURLで、APIを実行します。  
        http://localhost/api/files/testtable/c09ff510-7677-11ea-9096-a14cacaee56f.txt


        #### リクエスト時のクエリ文字列と、レスポンスの内容
        ##### リクエスト時にbase64=1を入れない場合
        レスポンス値は、ファイルのストリーム形式となります。

        ##### リクエスト時にbase64=1を入れる場合
        レスポンス値は、以下の形式のjsonとなります。

        ```
        {
          "type": "image/jpeg",
          "name": "test.jpg",
          "base64": "aaaaaXXXXXXX....."
        }
        ```



        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        v3.1.10
      requestBody: {}
      parameters:
        - schema:
            type: integer
          in: query
          name: base64
          description: 1の場合、base64文字列を含んだjson型で返却する
    delete:
      summary: ファイルの削除
      operationId: delete-file2
      responses:
        '200':
          description: OK
      description: |
        #### 処理概要
        * ファイルの削除を実施する
        * 特定のデータに紐付く添付ファイルの場合、添付ファイル情報も同時に削除する

        #### ファイルURL取得方法
        「ファイルのダウンロード」をご確認ください。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集

        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        v3.1.10
      tags:
        - ファイル・ドキュメント
  '/api/document/{tableKey}/{id}':
    parameters:
      - schema:
          type: string
        name: tableKey
        in: path
        required: true
        description: テーブル名(Ex. information)
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: カスタムデータのID
    get:
      summary: ドキュメント(添付ファイル)一覧の取得
      tags:
        - ファイル・ドキュメント
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Paginate'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Document'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - name: test.txt
                        url: 'http://localhost/admin/files/fcc7fea0-74e0-11ea-a1b4-8fd756c2e4b5'
                        api_url: 'http://localhost/admin/api/files/fcc7fea0-74e0-11ea-a1b4-8fd756c2e4b5'
                        created_at: '2020-04-02 21:53:45'
                        created_user_id: '1'
                      - name: test2.txt
                        url: 'http://localhost/admin/files/abaf364d-71d0-4958-88ed-8a5378d2722e'
                        api_url: 'http://localhost/admin/api/files/abaf364d-71d0-4958-88ed-8a5378d2722e'
                        created_at: '2020-04-02 21:53:45'
                        created_user_id: '1'
                    first_page_url: 'http://localhost/admin/api/document/footable/1?count=20&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/document/footable/1?count=20&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/document/footable/1'
                    per_page: 20
                    prev_page_url: null
                    to: 1
                    total: 2
      operationId: get-documents
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのカスタムデータの、ドキュメント（添付ファイル）一覧を取得する

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧


        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        v3.1.10
      parameters:
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            maximum: 100
            minimum: 1
            default: '20'
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
    post:
      summary: ドキュメント(添付ファイル)の作成
      operationId: post-document
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                Example:
                  value:
                    name: test.txt
                    url: 'http://localhost/admin/files/fcc7fea0-74e0-11ea-a1b4-8fd756c2e4b5'
                    api_url: 'http://localhost/admin/api/files/fcc7fea0-74e0-11ea-a1b4-8fd756c2e4b5'
                    created_at: '2020-04-02 21:53:45'
                    created_user_id: '1'
      description: |
        #### 処理概要
        * 特定のカスタムデータを選択し、そのデータに紐付くドキュメント（添付ファイル）をアップロードする

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：担当者データの編集


        #### APIスコープ(scope)
        + value_write

        #### 対応バージョン
        v3.1.10
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ファイル名
                base64:
                  type: string
                  description: base64文字列
              required:
                - name
                - base64
        description: ''
      tags:
        - ファイル・ドキュメント
  '/api/table/{tableKey}/column/{columnKey}':
    parameters:
      - type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
        schema:
          type: string
      - schema:
          type: string
        name: columnKey
        in: path
        required: true
        description: カスタム列名(Ex. user_code)
    get:
      summary: カスタム列情報取得(テーブル名・列名指定)
      tags:
        - テーブル
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomColumn'
              examples:
                Example:
                  value:
                    id: 45
                    suuid: 9ce2740b044ea7143a55
                    custom_table_id: '8'
                    column_name: title
                    column_view_name: タイトル
                    column_type: text
                    description: null
                    system_flg: '0'
                    order: '0'
                    options:
                      required: '1'
                      index_enabled: '1'
                    created_at: '2019-11-13 17:00:11'
                    updated_at: '2019-11-13 17:00:15'
                    created_user_id: null
                    updated_user_id: null
                    required: '1'
                    index_enabled: '1'
                    unique: false
        '':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomColumn'
              examples:
                Example:
                  value:
                    id: 25
                    suuid: a10469f586b847c5ef89
                    custom_table_id: '4'
                    column_name: user_code
                    column_view_name: ユーザーコード
                    column_type: text
                    description: null
                    system_flg: '1'
                    order: '0'
                    options:
                      required: '1'
                      index_enabled: '1'
                      init_only: '1'
                      unique: '1'
                      available_characters:
                        - lower
                        - upper
                        - number
                        - hyphen_underscore
                    created_at: '2020-04-20 17:01:13'
                    updated_at: '2020-04-20 17:01:13'
                    created_user_id: null
                    updated_user_id: null
                    required: '1'
                    index_enabled: '1'
                    unique: '1'
                    custom_table:
                      id: 4
                      suuid: 2930e334326a96f5d5c3
                      table_name: user
                      table_view_name: ユーザー
                      description: null
                      system_flg: '1'
                      showlist_flg: '1'
                      order: '0'
                      options:
                        search_enabled: '1'
                        icon: fa-user
                        one_record_flg: '0'
                        attachment_flg: '0'
                      created_at: '2020-04-20 17:01:13'
                      updated_at: '2020-04-20 17:01:13'
                      created_user_id: null
                      updated_user_id: null
      description: |
        #### 処理概要
        * テーブル名・カスタム列名から、カスタム列情報を取得する。
        * ログインユーザーがアクセスできないカスタムテーブルの列だった場合、403エラーが発生する。

        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + table_read
        + table_write

        #### 対応バージョン
        v3.1.12
      security:
        - OAuth2認証: []
      operationId: get-table-column
  '/api/viewdata/{tableKey}/{viewId}':
    parameters:
      - type: string
        name: viewId
        in: path
        required: true
        schema:
          type: string
        description: 'ビューのID(Ex. 2, 5)、もしくはsuuid(Ex. 22e715cf7f4ce5f319f0)'
      - schema:
          type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
    get:
      summary: カスタムデータ一覧取得(ビュー使用)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        description: データ結果
                      column_definitions:
                        type: array
                        description: 対象の列定義情報を記載した配列。キー名は、valueと合致するsuuid。
                        items:
                          $ref: '#/components/schemas/ViewColumnDefinition'
                  - $ref: '#/components/schemas/Paginate'
              examples:
                Example:
                  value:
                    current_page: 1
                    data:
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test20200616002525
                        6968926f2de4fa658b97: test_5
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test202006160025261
                        6968926f2de4fa658b97: test_4
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test202006160025262
                        6968926f2de4fa658b97: test_4
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test202006160025263
                        6968926f2de4fa658b97: test_4
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test20200616002531_update
                        6968926f2de4fa658b97: test_6
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test20200616002531_update
                        6968926f2de4fa658b97: test_7
                      - 82c58b9bc8a68842c292: null
                        12fc3d6f970afc5a7f28: test202006160025273
                        6968926f2de4fa658b97: test_8
                    first_page_url: 'http://localhost/admin/api/viewdata/child_table/be8cc0e9cd22f8bf6401?count=20&page=1'
                    from: 1
                    last_page: 1
                    last_page_url: 'http://localhost/admin/api/viewdata/child_table/be8cc0e9cd22f8bf6401?count=20&page=1'
                    next_page_url: null
                    path: 'http://localhost/admin/api/viewdata/child_table/be8cc0e9cd22f8bf6401'
                    per_page: 20
                    prev_page_url: null
                    to: 7
                    total: 7
                    column_definitions:
                      82c58b9bc8a68842c292:
                        table_name: child_table
                        column_name: id
                        label: ID
                      12fc3d6f970afc5a7f28:
                        table_name: child_table
                        column_name: text
                        label: text
                      6968926f2de4fa658b97:
                        table_name: parent_table
                        column_name: text
                        label: 'parent_table : text'
      description: |-
        #### 処理概要
        * ビューを指定し、そのビューを使用して、データ一覧を取得する
        * ログインユーザーに権限のあるデータのみ、一覧の対象となる
        * 対応ビュー種類：全件ビュー、通常ビュー、集計ビュー

        #### 結果の列名について
        * ビューを使用して結果を取得する場合、取得対象の列は、さまざまなケースがあります。（例：親テーブルのデータ、グループ化の集計結果）
        * ビューの設定によっては、列名が重複するケースがあり、列名のキーでは、列の種類が判別できない場合があります。
        * そのため、json形式で取得される、データ値の列名は、suuid(ランダムの20桁英数字)となっています。
        * 結果のjson"column_definitions"に、対象のsuuidのテーブル名、カスタム列名などの情報がセットされていますので、それらの値から、該当の列情報を分析・取得してください。

        ##### 例（一部省略）
        ``` json
        {
            "current_page": 1,
            "data": [
                {
                    "82c58b9bc8a68842c292": null,
                    "12fc3d6f970afc5a7f28": "child value 1",
                    "6968926f2de4fa658b97": "parent value 1"
                },
                {
                    "82c58b9bc8a68842c292": null,
                    "12fc3d6f970afc5a7f28": "child value 2",
                    "6968926f2de4fa658b97": null
                },
                {
                    "82c58b9bc8a68842c292": null,
                    "12fc3d6f970afc5a7f28": "child value 1",
                    "6968926f2de4fa658b97": null
                }
            ],
            "first_page_url": "http://localhost/admin/api/viewdata/child_table/be8cc0e9cd22f8bf6401?count=20&page=1",
            "total": 7,
            "column_definitions": {
                "82c58b9bc8a68842c292": {
                    "table_name": "child_table",
                    "column_name": "id",
                    "label": "ID"
                },
                "12fc3d6f970afc5a7f28": {
                    "table_name": "child_table",
                    "column_name": "text",
                    "label": "text"
                },
                "6968926f2de4fa658b97": {
                    "table_name": "parent_table",
                    "column_name": "text",
                    "label": "parent_table : text"
                }
            }
        }
        ```


        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v3.3.X 新規作成
      parameters:
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            maximum: 100
            minimum: 1
            default: '20'
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: string
          in: query
          name: valuetype
          description: 返却する値の種類。"text"の場合、画面に表示する文言を返却する
      security:
        - OAuth2認証: []
      operationId: get-view-values
      tags:
        - データ
  '/api/viewdata/{tableKey}/{viewId}/{id}':
    parameters:
      - type: string
        name: viewId
        in: path
        required: true
        schema:
          type: string
        description: 'ビューのID(Ex. 2, 5)、もしくはsuuid(Ex. 22e715cf7f4ce5f319f0)'
      - schema:
          type: string
        name: tableKey
        in: path
        required: true
        description: カスタムテーブルのID(Ex. 3)、もしくはテーブル名(Ex. user)
      - type: string
        name: id
        in: path
        required: true
        schema:
          type: string
        description: データのID
    get:
      summary: カスタムデータ情報取得(ビュー使用)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      value:
                        type: object
                        description: ビューの結果値。キー名は、該当の列のsuuid。
                      column_definitions:
                        type: array
                        description: 対象の列定義情報を記載した配列。キー名は、valueと合致するsuuid。
                        items:
                          $ref: '#/components/schemas/ViewColumnDefinition'
                type: object
              examples:
                Example:
                  value:
                    value:
                      82c58b9bc8a68842c292: null
                      12fc3d6f970afc5a7f28: test20200616002525
                      cd7672e19232308b00bf: 2
                      5e4736ea860fe41d2574: test20200616002525
                      1787a6afa95fc9059340: null
                      91bbad4146f78dc9faa6: 0
                      846e75fa6b1092e93a35: null
                      cde08af21db3fe8275ca: null
                      5e6b9c251a1ec37543bb: null
                      6968926f2de4fa658b97: test_5
                    column_definitions:
                      82c58b9bc8a68842c292:
                        table_name: child_table
                        column_name: id
                        label: ID
                      12fc3d6f970afc5a7f28:
                        table_name: child_table
                        column_name: text
                        label: text
                      cd7672e19232308b00bf:
                        table_name: child_table
                        column_name: user
                        label: user
                      5e4736ea860fe41d2574:
                        table_name: child_table
                        column_name: index_text
                        label: index_text
                      1787a6afa95fc9059340:
                        table_name: child_table
                        column_name: odd_even
                        label: odd_even
                      91bbad4146f78dc9faa6:
                        table_name: child_table
                        column_name: multiples_of_3
                        label: multiples_of_3
                      846e75fa6b1092e93a35:
                        table_name: child_table
                        column_name: file
                        label: file
                      cde08af21db3fe8275ca:
                        table_name: child_table
                        column_name: date
                        label: date
                      5e6b9c251a1ec37543bb:
                        table_name: child_table
                        column_name: init_text
                        label: init_text
                      6968926f2de4fa658b97:
                        table_name: parent_table
                        column_name: text
                        label: 'parent_table : text'
      description: |-
        #### 処理概要
        * ビューとデータのIDを指定し、そのビューを使用して、データ情報を取得する
        * ログインユーザーに権限のあるデータのみ、取得の対象となる
        * 対応ビュー種類：全件ビュー、通常ビュー

        #### 結果の列名について
        * ビューを使用して結果を取得する場合、取得対象の列は、さまざまなケースがあります。（例：親テーブルのデータ、グループ化の集計結果）
        * ビューの設定によっては、列名が重複するケースがあり、列名のキーでは、列の種類が判別できない場合があります。
        * そのため、json形式で取得される、データ値の列名は、suuid(ランダムの20桁英数字)となっています。
        * 結果のjson"column_definitions"に、対象のsuuidのテーブル名、カスタム列名などの情報がセットされていますので、それらの値から、該当の列情報を分析・取得してください。

        ##### 例（一部省略）
        ``` json
        {
            "value": {
                "82c58b9bc8a68842c292": null,
                "12fc3d6f970afc5a7f28": "child value 3",
                "6968926f2de4fa658b97": "parent value 1"
            },
            "column_definitions": {
                "82c58b9bc8a68842c292": {
                    "table_name": "child_table",
                    "column_name": "id",
                    "label": "ID"
                },
                "12fc3d6f970afc5a7f28": {
                    "table_name": "child_table",
                    "column_name": "text",
                    "label": "text"
                },
                "6968926f2de4fa658b97": {
                    "table_name": "parent_table",
                    "column_name": "text",
                    "label": "parent_table : text"
                }
            }
        }
        ```


        #### Exment権限(Permission)
        + システム：システム情報
        + システム：カスタムテーブル
        + システム：すべてのデータ
        + テーブル：テーブル
        + テーブル：すべてのデータの編集
        + テーブル：すべてのデータの閲覧
        + テーブル：すべてのデータの参照
        + テーブル：担当者データの編集
        + テーブル：担当者データの閲覧

        #### APIスコープ(scope)
        + value_read
        + value_write

        #### 対応バージョン
        - v3.3.X 新規作成
      parameters: []
      security:
        - OAuth2認証: []
      operationId: get-view-values
      tags:
        - データ
  /api/log:
    get:
      summary: 操作ログ一覧取得
      tags:
        - ログ
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Log'
                  - $ref: '#/components/schemas/Paginate'
              examples:
                Result:
                  value:
                    current_page: 1
                    data:
                      - id: 384
                        user_id: '1'
                        path: admin/api/log
                        method: GET
                        ip: 127.0.0.1
                        input: '{"base_user_id":"1","count":"2"}'
                        created_at: '2021-02-17 12:00:41'
                        updated_at: '2021-02-17 12:00:41'
                        base_user_id: '1'
                      - id: 383
                        user_id: '1'
                        path: admin/api/log
                        method: GET
                        ip: 127.0.0.1
                        input: '{"base_user_id":"1","count":"100"}'
                        created_at: '2021-02-17 11:54:55'
                        updated_at: '2021-02-17 11:54:55'
                        base_user_id: '1'
                    first_page_url: 'http://localhost/admin/api/log?page=1'
                    from: 1
                    last_page: 70
                    last_page_url: 'http://localhost/admin/api/log?page=70'
                    next_page_url: 'http://localhost/admin/api/log?page=2'
                    path: 'http://localhost/admin/api/log'
                    per_page: '2'
                    prev_page_url: null
                    to: 2
                    total: 139
      operationId: get-logs
      description: |
        #### 処理概要
        * 画面・APIの操作ログを取得する。※実行日時の逆順に取得します。

        #### login_user_idとbase_user_idについて
        * クエリ文字列の「login_user_id」と「base_user_id」の説明については、以下のURLをご確認ください。  
        https://exment.net/docs/#/ja/func_reference?id=%e8%a3%9c%e8%b6%b3%ef%bc%9aid%e3%81%a8base_user_id%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6

        #### Exment権限(Permission)
        + システム：システム情報

        #### APIスコープ(scope)
        + log

        #### 対応バージョン
        v4.0.3
      requestBody: {}
      parameters:
        - schema:
            type: integer
            default: '1'
          in: query
          name: page
          description: 取得するページ番号
        - schema:
            type: integer
            default: '20'
            maximum: 100
            minimum: 1
          in: query
          name: count
          description: 1回のリクエストで取得する件数。1～100
        - schema:
            type: integer
          in: query
          name: login_user_id
          description: ログインユーザーテーブルのID
        - schema:
            type: integer
          in: query
          name: base_user_id
          description: 「カスタムデータの『ユーザー(user)』」テーブルのID
        - schema:
            type: string
          in: query
          name: path
          description: HTTPリクエストの対象URI
        - schema:
            type: string
          in: query
          name: method
          description: 'メソッド(GET, POSTなど)'
        - schema:
            type: string
          in: query
          name: ip
          description: 実行ユーザーの中身IPアドレス
        - schema:
            type: string
          in: query
          name: target_datetime_start
          description: '取得する実行日時の開始日時。「2021-02-17 11:45:31」とした場合、この日時以降のログを取得'
        - schema:
            type: string
          in: query
          name: target_datetime_end
          description: '取得する実行日時の終了日時。「2021-02-17 11:45:31」とした場合、この日時以前のログを取得'
  '/api/log/{id}':
    get:
      summary: 操作ログ取得
      tags:
        - ログ
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
              examples:
                Result:
                  value:
                    id: 390
                    user_id: '1'
                    path: admin/api/log/400
                    method: GET
                    ip: 127.0.0.1
                    input: '[]'
                    created_at: '2021-02-17 12:06:51'
                    updated_at: '2021-02-17 12:06:51'
                    base_user_id: '1'
      operationId: get-log
      description: |
        #### 処理概要
        * 指定のIDの、画面・APIの操作ログを取得する

        #### Exment権限(Permission)
        + システム：システム情報

        #### APIスコープ(scope)
        + log

        #### 対応バージョン
        v4.0.3
      requestBody: {}
      parameters: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: 操作ログID
components:
  schemas:
    CustomTable:
      title: CustomTable
      description: カスタムテーブル情報
      x-examples:
        example-1: {}
      allOf:
        - type: object
          properties:
            id:
              type: integer
            table_name:
              type: string
              description: テーブル名(英数字)
            table_view_name:
              type: string
              description: テーブル表示名
            description:
              type: string
              description: 説明文
            system_flg:
              type: boolean
              default: 0
              description: システムによって作成されたテーブルかどうか
            showlist_flg:
              type: boolean
              default: 0
              description: 一覧に表示するかどうか
            order:
              type: integer
              description: 並び順
            options:
              type: object
              properties:
                icon:
                  type: string
                  description: Font-awesomeアイコン
                comment_flg:
                  type: boolean
                  description: コメント機能を使用
                  default: true
                attachment_flg:
                  type: boolean
                  description: 添付機能を使用
                  default: true
                one_record_flg:
                  type: boolean
                  default: false
                  description: 1件のみのデータかどうか
                search_enabled:
                  type: boolean
                  default: true
                  description: 検索を許可するか
                all_user_editable_flg:
                  type: boolean
                  default: false
                  description: すべてのユーザーが、編集を許可するか
                all_user_viewable_flg:
                  default: false
                  description: すべてのユーザーが、閲覧を許可するか
                  type: boolean
                all_user_accessable_flg:
                  type: boolean
                  default: false
                  description: すべてのユーザーが、参照を許可するか
          required:
            - table_name
            - table_view_name
            - system_flg
            - showlist_flg
            - order
            - id
        - $ref: '#/components/schemas/ModelBase'
    CustomColumn:
      title: CustomColumn
      description: カスタム列情報
      allOf:
        - type: object
          properties:
            id:
              type: integer
            column_name:
              type: string
              description: カラム名(英数字)
            column_view_name:
              type: string
              description: カラム表示名
            required:
              type: boolean
              default: true
              description: 必須列かどうか
            index_enabled:
              type: boolean
              default: 1
              description: 検索インデックス列かどうか
            unique:
              type: boolean
              default: 1
              description: ユニーク列かどうか
            column_type:
              type: string
              description: 列種類
            custom_table_id:
              type: integer
              description: カスタムテーブルのid
          required:
            - id
            - column_name
            - column_view_name
            - required
            - index_enabled
            - unique
            - column_type
            - custom_table_id
        - $ref: '#/components/schemas/ModelBase'
    CustomValue:
      title: CustomValue
      description: カスタムデータ情報
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: id
            value:
              description: 画面で入力したデータのkey-value列。
              type: object
            parent_id:
              type: integer
              description: そのデータに親データがある場合、親テーブルのカスタムデータのid
            parent_type:
              type: string
              description: そのデータに親データがある場合、親テーブル名
            label:
              description: そのデータを画面表示するときの見出し(読み取り専用)
              type: string
            deleted_at:
              type: string
              description: 削除日時
            deteled_user_id:
              type: integer
              description: 削除ユーザーID
          required:
            - id
        - $ref: '#/components/schemas/ModelBase'
    Paginate:
      title: Paginate
      type: object
      description: 一覧の結果モデル
      properties:
        current_page:
          type: integer
          default: 1
          description: 現在のページ
        first_page_url:
          type: string
          description: 最初のページのURL
        last_page:
          type: integer
          description: 最後のページ番号
        path:
          type: string
        per_page:
          type: integer
          description: 1ページあたりの表示件数
        to:
          type: integer
          description: 表示しているデータの終了番号
        total:
          type: integer
          description: データの全件数
        from:
          type: integer
          description: 表示しているデータの開始番号
        last_page_url:
          type: string
          description: 最後のページのURL
        prev_page_url:
          type: string
          description: 前のページのURL
        next_page_url:
          type: string
          description: 次のページのURL
    ModelBase:
      title: ModelBase
      type: object
      description: Exmentモデルの基底クラス
      properties:
        id:
          type: integer
          description: id
        created_at:
          description: 作成日時
          type: string
        updated_at:
          description: 更新日時
          type: string
        updated_user_id:
          description: 更新ユーザーID
          type: integer
        created_user_id:
          description: 作成ユーザーID
          type: integer
      required:
        - id
    Workflow:
      title: Workflow
      description: ワークフロー情報
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID
            workflow_type:
              type: integer
              description: (未利用)
            workflow_view_name:
              type: string
              description: ワークフロー表示名
            start_status_name:
              type: string
              description: 開始ステータス名
            setting_completed_flg:
              type: integer
              default: 0
              description: 設定完了フラグ
            workflow_statuses:
              type: array
              description: ワークフローステータス一覧 ※クエリで「expands=statuses」指定した場合のみ追加される
              items:
                $ref: '#/components/schemas/WorkflowStatus'
            workflow_actions:
              type: array
              description: ワークフローアクション一覧 ※クエリで「expands=actions」指定した場合のみ追加される
              items:
                $ref: '#/components/schemas/WorkflowAction'
          required:
            - id
            - workflow_view_name
            - start_status_name
            - setting_completed_flg
        - $ref: '#/components/schemas/ModelBase'
    WorkflowStatus:
      title: WorkflowStatus
      description: ワークフローステータス情報
      allOf:
        - type: object
          properties:
            id:
              description: ID
              type: integer
            workflow_id:
              type: integer
              description: Workflow ID
            status_type:
              type: integer
              description: (未利用)
            status_name:
              type: string
              description: ステータス表示名
            datalock_flg:
              type: integer
              default: 1
              description: 1のとき、このステータスのデータは画面から変更不可
            completed_flg:
              type: integer
              default: 1
              description: 1のとき、ワークフローの終了
          required:
            - id
            - workflow_id
            - status_name
            - datalock_flg
            - completed_flg
        - $ref: '#/components/schemas/ModelBase'
    WorkflowAction:
      title: WorkflowAction
      description: ワークフローのアクション
      allOf:
        - properties:
            id:
              type: integer
              description: ID
            workflow_id:
              type: integer
              description: Workflow ID
            status_from:
              type: string
              description: アクション実行前のステータスID。"start"文字列の場合、ワークフロー開始時のステータス
            action_name:
              type: string
              description: アクション表示名
            ignore_work:
              type: integer
              default: 0
              description: 1のとき、そのアクションは特殊アクションとなり、作業ユーザーから除外される
            comment_type:
              type: string
              description: 'コメントの記入方法。required:必須、nullable：任意、not_use：未利用'
            flow_next_type:
              type: string
              description: 次のステータスに進む方法。some：X人以上、all：全員が承認
            flow_next_count:
              type: integer
              description: flow_next_typeがsomeのとき、何人以上の実施で次のステータスへ進むかどうか
            work_targets:
              type: object
              description: このワークフローを実施できる権限のある人の情報
              properties:
                work_target_type:
                  type: string
                  description: ワークフローの実行対象。fix：固定のユーザー、action_select：前のアクションユーザーが指定
                system:
                  type: array
                  description: 0：そのデータの作成ユーザーID
                  items:
                    type: integer
                user:
                  type: array
                  description: アクションを実行できるユーザーのID配列
                  items:
                    type: integer
                organization:
                  type: array
                  description: アクションを実行できる組織のID配列
                  items:
                    type: integer
                column:
                  type: array
                  description: カスタム列ID配列。そのカスタム列に指定しているユーザーが、アクションの実行ユーザーになる
                  items:
                    type: integer
            work_conditions:
              description: ワークフローの実行条件
              type: array
              items:
                type: object
                properties:
                  status_to:
                    type:
                      - string
                      - integer
                    description: アクション実行後のステータスID。"start"文字列の場合、ワークフロー開始時のステータス
                  enabled_flg:
                    type:
                      - string
                      - integer
                    description: 1の場合、その条件は有効となる
                required:
                  - enabled_flg
          required:
            - id
            - workflow_id
            - action_name
            - ignore_work
      type: object
    WorkflowValue:
      title: WorkflowValue
      description: ワークフローの実行値
      allOf:
        - properties:
            id:
              type: integer
              description: ID
            workflow_id:
              type: integer
              description: ワークフローID
            morph_type:
              type: string
              description: 紐付くカスタムデータのテーブル名
            morph_id:
              type: integer
              description: 紐付くカスタムデータのID
            workflow_action_id:
              type: integer
              description: ワークフローのアクションID
            workflow_status_from_id:
              type: integer
              description: アクション実行前のワークフローステータスID。nullの場合、実行前のステータスは、ワークフロー未実施のステータスであることを示す
            workflow_status_to_id:
              type: integer
              description: アクション実行後のワークフローステータスID。nullの場合、実行後のステータスは、ワークフロー未実施のステータスであることを示す
            comment:
              type: string
              description: コメント
            action_executed_flg:
              type: integer
              default: 0
              description: 1のときは、現在そのワークフローステータスが実行中であることを示す
            latest_flg:
              type: integer
              default: 0
              description: 1のときは、そのワークフロー実行値がもっとも最新であることを示す
          required:
            - id
            - workflow_id
            - morph_type
            - morph_id
            - workflow_action_id
            - action_executed_flg
            - latest_flg
      type: object
    Notify:
      title: Notify
      description: 通知バーの通知情報
      type: object
      properties:
        id:
          type: integer
          description: 通知バーID
        notify_id:
          type: integer
          description: 通知定義のID。フリーフォーマットの通知の場合、0が入る
        parent_type:
          type: string
          description: 特定のカスタムデータに紐付く通知の場合、カスタムテーブルのテーブル名
        parent_id:
          type: integer
          description: 特定のカスタムデータに紐付く通知の場合、カスタムデータのID
        target_user_id:
          type: integer
          description: 通知対象のユーザーID
        trigger_user_id:
          type: integer
          description: 通知の実行元になったユーザーのID
        notify_subject:
          type: string
          description: 通知の件名
        notify_body:
          type: string
          description: 通知の本文
        read_flg:
          type: integer
          default: 0
          description: 既読の場合1
        created_at:
          type: string
          description: 作成日時
        updated_at:
          type: string
          description: 更新日時
      required:
        - id
        - notify_id
        - target_user_id
        - trigger_user_id
        - notify_subject
        - notify_body
        - read_flg
    Document:
      title: Document
      type: object
      properties:
        name:
          type: string
          description: ファイル名
        url:
          type: string
          description: 画面からアクセスする場合のURL。※ログイン画面での認証が必要
        api_url:
          type: string
          description: APIからアクセスする場合のURL。※アクセストークン認証が必要
        created_at:
          type: string
          description: アップロード日時
        created_user_id:
          type: integer
          description: アップロードユーザーID
    CustomView:
      title: CustomView
      description: カスタムビュー情報
      x-examples:
        example-1: {}
      allOf:
        - type: object
          properties:
            id:
              type: integer
            suuid:
              type: string
              description: SUUID(20桁の英数字)
            custom_table_id:
              type: integer
              description: 対象のテーブルのID
            view_view_name:
              type: string
              description: ビュー情報表示名
            view_kind_type:
              type: integer
              description: ビュー種類。0=通常ビュー、1=集計ビュー、2=カレンダービュー、3=条件ビュー、9=全件ビュー
            view_type:
              type: string
              description: ビュー権限。0=システムビュー、1=ユーザービュー
          required:
            - id
            - suuid
            - custom_table_id
            - view_view_name
            - view_kind_type
            - view_type
        - $ref: '#/components/schemas/ModelBase'
    ViewColumnDefinition:
      title: ViewColumnDefinition
      type: object
      description: ビューの列の情報
      properties:
        table_name:
          type: string
          description: 列の対象のテーブル名
        column_name:
          type: string
          description: 対象の列名
        label:
          type: string
          description: 画面表示時の、列の文言
        summary_condition:
          type: string
          description: 該当のビューが集計ビューの場合で、集計列の場合、集計の種類。sum、count、min、max
    Log:
      title: Log
      type: object
      description: 操作ログ情報
      properties:
        id:
          type: integer
          description: ID
        user_id:
          type: integer
          description: ログインユーザーテーブルのID。※未ログイン時のログは"0"になる
        base_user_id:
          type: integer
          description: 「カスタムデータの『ユーザー(user)』」テーブルのID。※未ログイン時のログは"0"になる
        path:
          type: string
          description: HTTPリクエストの対象URI。※GETメソッドで、クエリ文字列が含まれていた場合でも、この項目には出力されず、代わりに「入力・クエリ」が表示される
        method:
          type: string
          description: 'メソッド(GET, POSTなど)'
        ip:
          type: string
          description: 実行ユーザーのIPアドレス
        input:
          type: string
          description: HTTPリクエストのクエリ文字列、もしくはPOST値
        created_at:
          type: string
          description: 実行日時
        updated_at:
          type: string
          description: 更新日時
  securitySchemes:
    OAuth2認証:
      type: oauth2
      flows:
        password:
          tokenUrl: /oauth/token
          refreshUrl: /oauth/token
          scopes: []
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          refreshUrl: /oauth/token
          scopes: []
